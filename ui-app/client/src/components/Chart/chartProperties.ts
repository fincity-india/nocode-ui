import {
	SCHEMA_ANY_COMP_PROP,
	SCHEMA_BOOL_COMP_PROP,
	SCHEMA_NUM_COMP_PROP,
	SCHEMA_STRING_COMP_PROP,
} from '../../constants';
import {
	ComponentPropertyDefinition,
	ComponentPropertyGroup,
	ComponentStylePropertyDefinition,
} from '../../types/common';
import { COMMON_COMPONENT_PROPERTIES, COMPONENT_STYLE_GROUP_PROPERTIES } from '../util/properties';

const propertiesDefinition: Array<ComponentPropertyDefinition> = [
	{
		name: 'hideGrid',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide Grid',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		...COMMON_COMPONENT_PROPERTIES.colorScheme,
		enumValues: [
			{
				name: '_primary',
				displayName: 'Primary Color Scheme',
				description: 'Primary Color Scheme',
			},
		],
	},
	{
		name: 'chartType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Chart Type',
		group: ComponentPropertyGroup.BASIC,
		defaultValue: 'regular',
		enumValues: [
			{ name: 'regular', displayName: 'Regular (Line or Bar)' },
			{ name: 'radial', displayName: 'Radial (Pie or Doughnut or Polar Area)' },
			{ name: 'radar', displayName: 'Radar (Circular or Polygon)' },
			{ name: 'dot', displayName: 'Dot (Bubble or Scatter)' },
			{ name: 'waffle', displayName: 'Waffle' },
		],
	},

	{
		name: 'data',
		schema: SCHEMA_ANY_COMP_PROP,
		displayName: 'Data',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'dataSetColors',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Set Colors',
		multiValued: true,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'dataSetStrokeColors',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Set Stroke Colors',
		multiValued: true,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'dataColorsPath',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Colors Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},
	{
		name: 'dataStrokeColorsPath',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Stroke Colors Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},
	{
		name: 'dataSetFillOpacity',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Data Set Fill Opacity',
		multiValued: true,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'dataFillOpacityPath',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Fill Opacity Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},
	{
		name: 'dataSetStrokeOpacity',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Data Set Stroke Opacity',
		multiValued: true,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'dataStrokeOpacityPath',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Stroke Opacity Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},
	{
		name: 'xAxisType',
		schema: SCHEMA_STRING_COMP_PROP,
		defaultValue: 'ordinal',
		displayName: 'X Axis Type',
		group: ComponentPropertyGroup.DATA,
		enumValues: [
			{ name: 'ordinal', displayName: 'Ordinal' },
			{ name: 'value', displayName: 'Value' },
			{ name: 'time', displayName: 'Time' },
			{ name: 'log', displayName: 'Logirthamic' },
			{ name: 'derived', displayName: 'Derived' },
		],
	},
	{
		name: 'xAxisStartPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		defaultValue: 'bottom',
		displayName: 'X Axis Start Position',
		group: ComponentPropertyGroup.ADVANCED,
		enumValues: [
			{ name: 'bottom', displayName: 'Bottom' },
			{ name: 'top', displayName: 'Top' },
			{ name: 'center', displayName: 'Center' },
			{ name: 'y0', displayName: 'Y = 0' },
			{ name: 'custom', displayName: 'Custom' },
		],
	},
	{
		name: 'xAxisStartCustomValue',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'X Axis Start Custom Value',
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'xAxisLabels',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'X Axis Labels for Ordinal Axis',
		group: ComponentPropertyGroup.DATA,
		multiValued: true,
	},
	{
		name: 'xAxisLabelsSort',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Sort X Axis Labels',
		group: ComponentPropertyGroup.DATA,
		defaultValue: 'none',
		enumValues: [
			{ name: 'none', displayName: 'None' },
			{ name: 'ascending', displayName: 'Ascending' },
			{ name: 'descending', displayName: 'Descending' },
		],
	},
	{
		name: 'xAxisMin',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'X Axis Min',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'xAxisSuggestedMin',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'X Axis Suggested Min',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'xAxisMax',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'X Axis Max',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'xAxisSuggestedMax',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'X Axis Suggested Max',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'xAxisReverse',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'X Axis Reverse',
		defaultValue: false,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'xAxisHideTicks',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide X Axis Ticks',
		group: ComponentPropertyGroup.DATA,
		defaultValue: false,
	},
	{
		name: 'xAxisHideLabels',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide X Axis Labels',
		group: ComponentPropertyGroup.DATA,
		defaultValue: false,
	},
	{
		name: 'xAxisDataSetPath',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'X Axis Data Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.DATA,
		multiValued: true,
	},
	{
		name: 'hideXAxis',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide X Axis',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'hideXAxisLine',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide X Axis Line',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'hideXLines',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide X Lines',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'xAxisTitle',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'X Axis Title',
		group: ComponentPropertyGroup.DATA,
	},

	{
		name: 'yAxisType',
		schema: SCHEMA_STRING_COMP_PROP,
		defaultValue: 'derived',
		displayName: 'Y Axis Type',
		group: ComponentPropertyGroup.DATA,
		enumValues: [
			{ name: 'ordinal', displayName: 'Ordinal' },
			{ name: 'value', displayName: 'Value' },
			{ name: 'log', displayName: 'Logirthamic' },
			{ name: 'derived', displayName: 'Derived' },
		],
	},
	{
		name: 'yAxisStartPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		defaultValue: 'left',
		displayName: 'Y Axis Start Position',
		group: ComponentPropertyGroup.ADVANCED,
		enumValues: [
			{ name: 'left', displayName: 'Left' },
			{ name: 'right', displayName: 'Right' },
			{ name: 'center', displayName: 'Center' },
			{ name: 'x0', displayName: 'X = 0' },
			{ name: 'custom', displayName: 'Custom' },
		],
	},
	{
		name: 'yAxisStartCustomValue',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Y Axsis Start Custom Value',
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'dataSetLabels',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Set Labels',
		multiValued: true,
	},
	{
		name: 'yAxisLabelsSort',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Sort Y Axis Labels for Ordinal Axis',
		group: ComponentPropertyGroup.DATA,
		defaultValue: 'none',
		enumValues: [
			{ name: 'none', displayName: 'None' },
			{ name: 'ascending', displayName: 'Ascending' },
			{ name: 'descending', displayName: 'Descending' },
		],
	},
	{
		name: 'yAxisMin',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Y Axis Min',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'yAxisSuggestedMin',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Y Axis Suggested Min',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'yAxisMax',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Y Axis Max',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'yAxisSuggestedMax',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Y Axis Suggested Max',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'yAxisReverse',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Y Axis Reverse',
		defaultValue: false,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'yAxisHideTicks',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide Y Axis Ticks',
		group: ComponentPropertyGroup.DATA,
		defaultValue: false,
	},
	{
		name: 'yAxisHideLabels',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide Y Axis Labels',
		group: ComponentPropertyGroup.DATA,
		defaultValue: false,
	},
	{
		name: 'yAxisDataSetPath',
		schema: SCHEMA_STRING_COMP_PROP,
		multiValued: true,
		displayName: 'Y Axis Data Set Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'yAxisRangeDataSetPath',
		schema: SCHEMA_STRING_COMP_PROP,
		multiValued: true,
		displayName: 'Y Axis Range Data Set Expr. in Object',
		description:
			'Use "Data." prefix to access data object in expression. Used for floating bars like range charts',
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'yAxisDataSetStyle',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Data Set Style',
		description: 'Style for the data set, make sure the style is supported by the chart type.',
		group: ComponentPropertyGroup.DATA,
		multiValued: true,
		enumValues: [
			{ name: 'line', displayName: 'Line - Regular' },
			{ name: 'smoothLine', displayName: 'Smooth Line - Regular' },
			{ name: 'steppedLineBefore', displayName: 'Stepped Line - Regular' },
			{ name: 'steppedLineAfter', displayName: 'Stepped Line After  - Regular' },
			{ name: 'steppedLineMiddle', displayName: 'Stepped Line Middle - Regular' },
			{ name: 'bar', displayName: 'Bar - Regular' },
			{ name: 'horizontalBar', displayName: 'Horizontal Bar - Regular' },
			{ name: 'lollipop', displayName: 'Lollipop - Regular' },
			{ name: 'dot', displayName: 'Bubble or Scatter - Regular' },

			{ name: 'pie', displayName: 'Pie - Radial' },
			{ name: 'doughnut', displayName: 'Doughnut - Radial' },
			{ name: 'polarArea', displayName: 'Polar Area - Radial' },
			{ name: 'radar', displayName: 'Radar - Radar' },

			{ name: 'waffle', displayName: 'Waffle - Waffle' },
		],
	},
	{
		name: 'hideYAxis',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide Y Axis',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'hideYAxisLine',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide Y Axis Line',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'hideYLines',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Hide Y Lines',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},
	{
		name: 'yAxisTitle',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Y Axis Title',
		group: ComponentPropertyGroup.DATA,
	},

	{
		name: 'stackedAxis',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Stacked Axis',
		group: ComponentPropertyGroup.DATA,
		defaultValue: 'none',
		enumValues: [
			{ name: 'none', displayName: 'None' },
			{ name: 'x', displayName: 'X Axis' },
			{ name: 'y', displayName: 'Y Axis' },
			{ name: 'z', displayName: 'Z Axis' },
		],
	},

	{
		name: 'legendPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Legend Position',
		group: ComponentPropertyGroup.BASIC,
		defaultValue: 'top',
		enumValues: [
			{ name: 'top', displayName: 'Top' },
			{ name: 'bottom', displayName: 'Bottom' },
			{ name: 'left', displayName: 'Left' },
			{ name: 'right', displayName: 'Right' },
			{ name: 'none', displayName: 'None' },
		],
	},

	{
		name: 'dataSetPointType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Point Type',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
		defaultValue: ['circle'],
		enumValues: [
			{ name: 'circle', displayName: 'Circle' },
			{ name: 'filledCircle', displayName: 'Filled Circle' },
			{ name: 'cross', displayName: 'Cross' },
			{ name: 'x', displayName: 'X' },
			{ name: 'dash', displayName: 'Dash' },
			{ name: 'line', displayName: 'Line' },
			{ name: 'verticalLine', displayName: 'Vertical Line' },
			{ name: 'square', displayName: 'Square' },
			{ name: 'filledSquare', displayName: 'Filled Square' },
			{ name: 'squareRounded', displayName: 'Square Rounded' },
			{ name: 'filledSquareRounded', displayName: 'Filled Square Rounded' },
			{ name: 'squareRot', displayName: 'Square Rotated' },
			{ name: 'filledSquareRot', displayName: 'Filled Square Rotated' },
			{ name: 'star', displayName: 'Star' },
			{ name: 'filledStar', displayName: 'Filled Star' },
			{ name: 'triangle', displayName: 'Triangle' },
			{ name: 'filledTriangle', displayName: 'Filled Triangle' },
			{ name: 'triangleRot', displayName: 'Triangle Rotated' },
			{ name: 'filledTriangleRot', displayName: 'Filled Triangle Rotated' },
			{ name: 'none', displayName: 'None' },
		],
	},
	{
		name: 'dataPointTypePath',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Point Type Data Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},
	{
		name: 'dataSetPointSize',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Point Size',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},

	{
		name: 'dataPointSizePath',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Point Size Data Expr. in Object',
		description: 'Use "Data." prefix to access data object in expression',
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},
	{
		name: 'invertAxis',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Invert Axis',
		defaultValue: false,
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'animationTime',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Animation Time (ms)',
		defaultValue: 1000,
		description:
			'Animation Time in Milliseconds with values less than or equal to 0 for no animation',
		group: ComponentPropertyGroup.ADVANCED,
	},

	{
		name: 'animationTimingFunction',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Animation Timing Function',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'easeLinear',
		enumValues: [
			{ name: 'easeLinear', displayName: 'Linear' },
			{ name: 'easePoly', displayName: 'Poly' },
			{ name: 'easeQuad', displayName: 'Quad' },
			{ name: 'easeCubic', displayName: 'Cubic' },
			{ name: 'easeSin', displayName: 'Sin' },
			{ name: 'easeExp', displayName: 'Exp' },
			{ name: 'easeCircle', displayName: 'Circle' },
			{ name: 'easeElastic', displayName: 'Elastic' },
			{ name: 'easeBack', displayName: 'Back' },
			{ name: 'easeBounce', displayName: 'Bounce' },
		],
	},

	{
		name: 'preNormalization',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Pre-Normalized',
		defaultValue: 'none',
		enumValues: [
			{ name: 'none', displayName: 'No Pre Normalization' },
			{ name: '100', displayName: 'Pre Normalized from 0 - 100' },
			{ name: '1', displayName: 'Pre Normalized from 0 - 1' },
			{ name: '-100', displayName: 'Pre Normalized from -100 - +100' },
			{ name: '-1', displayName: 'Pre Normalized from -1 - +1' },
		],
		group: ComponentPropertyGroup.ADVANCED,
	},

	{
		name: 'tooltipPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tooltip Position',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'top',
		enumValues: [
			{ name: 'top', displayName: 'Top' },
			{ name: 'bottom', displayName: 'Bottom' },
			{ name: 'left', displayName: 'Left' },
			{ name: 'right', displayName: 'Right' },
		],
	},

	{
		name: 'tooltipData',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tooltip Data',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'allDataSets',
		enumValues: [
			{ name: 'allDataSets', displayName: 'All Data Sets' },
			{ name: 'currentDataSet', displayName: 'Current Data Set' },
		],
	},

	{
		name: 'tooltipTrigger',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tooltip Trigger',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'hoverOnAxis',
		enumValues: [
			{ name: 'hoverOnAxis', displayName: 'Hover on Axis' },
			{ name: 'hoverOnData', displayName: 'Hover on Data' },
			{ name: 'clickOnData', displayName: 'Click on Data' },
		],
	},

	{
		name: 'disableLegendInteraction',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Disable Legend Interaction',
		group: ComponentPropertyGroup.ADVANCED,
	},

	{
		name: 'radarType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Radar Type',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'polygon',
		enumValues: [
			{ name: 'polygon', displayName: 'Polygon' },
			{ name: 'circular', displayName: 'Circular' },
		],
	},

	{
		name: 'radialType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Radial Type',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'stack',
		enumValues: [
			{ name: 'stack', displayName: 'Stacked' },
			{ name: 'group', displayName: 'Grouped' },
		],
	},
	{
		name: 'padding',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Padding (px)',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 5,
	},
	{
		name: 'focusDataSetOnHover',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Focus Data Set on Hover',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: false,
	},

	{
		name: 'gradientSpace',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Gradient Space',
		group: ComponentPropertyGroup.ADVANCED,
		defaultValue: 'objectBoundingBox',
		enumValues: [
			{ name: 'objectBoundingBox', displayName: 'Each Object' },
			{ name: 'userSpaceOnUse', displayName: 'Entire Chart' },
		],
	},

	COMMON_COMPONENT_PROPERTIES.visibility,
];

const stylePropertiesDefinition: ComponentStylePropertyDefinition = {
	'': [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
	],
	xAxisLabel: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	yAxisLabel: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	legendLabel: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	legendRectangle: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	tooltip: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
	],
	horizontalLines: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	verticalLines: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	xAxisTitle: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	yAxisTitle: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	bar: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	xAxis: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
	yAxis: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.svg.type,
	],
};

export { propertiesDefinition, stylePropertiesDefinition };
