import { Schema } from '@fincity/kirun-js';
import {
    SCHEMA_REF_ANY_COMP_PROP,
    SCHEMA_REF_BOOL_COMP_PROP,
    SCHEMA_REF_STRING_COMP_PROP,
} from '../../constants';
import {
    ComponentPropertyDefinition,
    ComponentPropertyEditor,
    ComponentPropertyGroup,
} from '../../types/common';
import { COMPONENT_STYLE_GROUP_PROPERTIES } from '../util/properties';

const propertiesDefinition: Array<ComponentPropertyDefinition> = [
    {
        name: 'defaultValue',
        schema: Schema.ofRef(SCHEMA_REF_ANY_COMP_PROP),
        displayName: 'Default Value',
        description: 'This value is use when the data entered is empty or not entered.',
    },
    {
        name: 'readOnly',
        schema: Schema.ofRef(SCHEMA_REF_BOOL_COMP_PROP),
        displayName: 'Read Only',
        description: 'Calendar will be rendered un editable when this property is true.',
        group: ComponentPropertyGroup.COMMON,
    },
    {
        name: 'dateFormat',
        schema: Schema.ofRef(SCHEMA_REF_STRING_COMP_PROP),
        displayName: 'Date Format',
        description: 'This value is used when we want to display the format of the input and parse the date.',
        editor: ComponentPropertyEditor.ENUM,
        defaultValue: 'MM/DD/YYYY',
        enumValues: [
            {
                name: 'MMM D, YY',
                displayName: 'MMM D, YY',
                description: 'Javascript MMM D, YY Format Type',
            },
            {
                name: 'YYYY-MM-DD',
                displayName: 'YYYY-MM-DD',
                description: 'Javascript YYYY-MM-DD Format Type',
            },
            {
                name: 'MM/DD/YY',
                displayName: 'MM/DD/YY',
                description: 'Javascript MM/DD/YY Format Type',
            },
            {
                name: 'MMM DD, YYYY',
                displayName: 'MMM DD, YYYY',
                description: 'Javascript MMM DD, YYYY Format Type',
            },
            {
                name: 'MMMM DD, YYYY',
                displayName: 'MMMM DD, YYYY',
                description: 'Javascript MMMM DD, YYYY Format Type',
            },
            {
                name: 'dd MMM D YY',
                displayName: 'dd MMM D YY',
                description: 'Javascript dd MMM D YY Format Type',
            },
            {
                name: 'YYYY-MM-DD',
                displayName: 'YYYY-MM-DD',
                description: 'Javascript YYYY-MM-DD Format Type',
            },
            {
                name: 'YYYY-MM-DD HH:mm',
                displayName: 'YYYY-MM-DD HH:mm',
                description: 'Javascript YYYY-MM-DD HH:mm Format Type',
            },
            {
                name: 'YYYY-MM-DD hh:mm A',
                displayName: 'YYYY-MM-DD hh:mm A',
                description: 'Javascript YYYY-MM-DD hh:mm A Format Type',
            },
            {
                name: 'YYYY-MM-DD HH:mm:ss',
                displayName: 'YYYY-MM-DD HH:mm:ss',
                description: 'Javascript YYYY-MM-DD HH:mm:ss Format Type',
            },
            {
                name: 'YYYY-MM-DD hh:mm:ss A',
                displayName: 'YYYY-MM-DD hh:mm:ss A',
                description: 'Javascript YYYY-MM-DD hh:mm:ss A Format Type',
            },
            {
                name: 'hh:mm A',
                displayName: 'hh:mm A',
                description: 'Javascript hh:mm A Format Type',
            },
            {
                name: 'ddd MMM D YY h:mm A',
                displayName: 'ddd MMM D YY h:mm A',
                description: 'Javascript ddd MMM D YY h:mm A Format Type',
            },
            {
                name: 'dddd, MMM D YYYY hh:mm A',
                displayName: 'dddd, MMM D YYYY hh:mm A',
                description: 'Javascript dddd, MMM D YYYY hh:mm A Format Type',
            },
        ],
    },
    {
        name: 'minDate',
        schema: Schema.ofRef(SCHEMA_REF_ANY_COMP_PROP),
        displayName: 'Min Date',
        description: 'This value is use when we want to show Date after the min date, others will be disabled',
    },
    {
        name: 'maxDate',
        schema: Schema.ofRef(SCHEMA_REF_ANY_COMP_PROP),
        displayName: 'Max Date',
        description: 'This value is use when we want to show Date before the Max date, others will be disabled',
    },
    {
        name: 'yearAndMonthSelector',
        schema: Schema.ofRef(SCHEMA_REF_BOOL_COMP_PROP),
        displayName: 'Can Edit Year and Month At One go.',
        description: 'This value is use when we want to show Year and month in calendar for selection',
    },
    {
        name: 'isDateRange',
        schema: Schema.ofRef(SCHEMA_REF_BOOL_COMP_PROP),
        displayName: 'Can have date range selection.',
        description: 'This value is use when we want to show Date Range Selection.',
    },
    {
        name: 'is24hour',
        schema: Schema.ofRef(SCHEMA_REF_BOOL_COMP_PROP),
        displayName: 'Can have time type selection.',
        description: 'This value is use when we want to show time in 24hr format Selection.',
    },
    {
        name: 'calendarIcon',
        schema: Schema.ofRef(SCHEMA_REF_STRING_COMP_PROP),
        displayName: 'Can give any type of icon for calendar compoennt',
        description: 'This value is use when we want to add a icon to the calendar compoenent.',
    },
    {
        name: 'calendarDateRangeIcon',
        schema: Schema.ofRef(SCHEMA_REF_STRING_COMP_PROP),
        displayName: 'Can give any type of icon for calendar date range compoennt',
        description: 'This value is use when we want to add a icon to the calendar date range compoenent.',
    },
    {
        name: 'closeOnMouseLeave',
        schema: Schema.ofRef(SCHEMA_REF_BOOL_COMP_PROP),
        displayName: 'Can give true or false for time dropdown to make the hover to close disable for date compoennt',
        description: 'This value is use when we want to set dropdown hover disable or enable in calendar date range compoenent.',
    },
    {
        name: 'startYear',
        schema: Schema.ofRef(SCHEMA_REF_ANY_COMP_PROP),
        displayName: 'Can give start year for calendar to choose the start year for date compoennt',
        description: 'This value is use when we want to set start value of year date compoenent.',
    },
    {
        name: 'endYear',
        schema: Schema.ofRef(SCHEMA_REF_ANY_COMP_PROP),
        displayName: 'Can give end year for calendar to choose the end year for date compoennt',
        description: 'This value is use when we want to set end value of year date compoenent.',
    },
];

const stylePropertiesDefinition = {
    '': {
        [COMPONENT_STYLE_GROUP_PROPERTIES.flex.type]: COMPONENT_STYLE_GROUP_PROPERTIES.flex,
        [COMPONENT_STYLE_GROUP_PROPERTIES.margin.type]: COMPONENT_STYLE_GROUP_PROPERTIES.margin,
        [COMPONENT_STYLE_GROUP_PROPERTIES.padding.type]: COMPONENT_STYLE_GROUP_PROPERTIES.padding,
        [COMPONENT_STYLE_GROUP_PROPERTIES.outline.type]: COMPONENT_STYLE_GROUP_PROPERTIES.outline,
        [COMPONENT_STYLE_GROUP_PROPERTIES.position.type]: COMPONENT_STYLE_GROUP_PROPERTIES.position,
        [COMPONENT_STYLE_GROUP_PROPERTIES.size.type]: COMPONENT_STYLE_GROUP_PROPERTIES.size,
        [COMPONENT_STYLE_GROUP_PROPERTIES.transform.type]:
            COMPONENT_STYLE_GROUP_PROPERTIES.transform,
        [COMPONENT_STYLE_GROUP_PROPERTIES.zIndex.type]: COMPONENT_STYLE_GROUP_PROPERTIES.zIndex,
        [COMPONENT_STYLE_GROUP_PROPERTIES.border.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.border,
            target: ['inputBoxContainer'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.boxShadow.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            target: ['inputBoxContainer'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.background.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.background,
            target: ['calendarPopOver'],
        },
    },
    inputBoxContainer: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.size.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.size,
            name: 'inputBoxContainer',
            displayName: 'inputBoxContainer size properties',
            description: 'inputBoxContainer size properties',
            prefix: 'inputBoxContainer',
            target: ['inputBoxContainer'],
        },
    },
    splitIcon: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'splitIcon',
            displayName: 'splitIcon font properties',
            description: 'splitIcon font properties',
            prefix: 'splitIcon',
            target: ['splitIcon'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'splitIcon',
            displayName: 'splitIcon color properties',
            description: 'splitIcon color properties',
            prefix: 'splitIcon',
            target: ['splitIcon'],
        },
    },
    rightIcon: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'rightIcon',
            displayName: 'rightIcon font properties',
            description: 'rightIcon font properties',
            prefix: 'rightIcon',
            target: ['rightIcon'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'rightIcon',
            displayName: 'rightIcon color properties',
            description: 'rightIcon color properties',
            prefix: 'rightIcon',
            target: ['rightIcon'],
        },
    },
    inputBox: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'inputBox',
            displayName: 'inputBox font properties',
            description: 'inputBox font properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'inputBox',
            displayName: 'inputBox color properties',
            description: 'inputBox color properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
    },
    calendarPopOver: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.position.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.position,
            name: 'calendarPopOver',
            displayName: 'calendarPopOver position properties',
            description: 'calendarPopOver position properties',
            prefix: 'calendarPopOver',
            target: ['calendarPopOver'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.boxShadow.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'calendarPopOver',
            displayName: 'calendarPopOver boxShadow properties',
            description: 'calendarPopOver boxShadow properties',
            prefix: 'calendarPopOver',
            target: ['calendarPopOver'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.border.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.border,
            name: 'calendarPopOver',
            displayName: 'calendarPopOver border properties',
            description: 'calendarPopOver border properties',
            prefix: 'calendarPopOver',
            target: ['calendarPopOver'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.size.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.size,
            name: 'calendarPopOver',
            displayName: 'calendarPopOver size properties',
            description: 'calendarPopOver size properties',
            prefix: 'calendarPopOver',
            target: ['calendarPopOver'],
        },
    },
    calendarPopupDiv: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.padding.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.padding,
            name: 'calendarPopupDiv',
            displayName: 'calendarPopupDiv padding properties',
            description: 'calendarPopupDiv padding properties',
            prefix: 'calendarPopupDiv',
            target: ['calendarPopupDiv'],
        },
    },
    calendarHeaderText: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.margin.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.margin,
            name: 'calendarHeaderText',
            displayName: 'calendarHeaderText icon margin properties',
            description: 'calendarHeaderText icons for previous and next padding properties',
            prefix: 'calendarHeaderText',
            target: ['calendarHeaderText'],
        },
    },
    calendarHeader: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.background.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.background,
            name: 'calendarHeader',
            displayName: 'calendarHeader background properties',
            description: 'calendarHeader background properties',
            prefix: 'calendarHeader',
            target: ['calendarHeader'],
        },
    },
    calendarTable: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.size.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.size,
            name: 'calendarTable',
            displayName: 'calendarTable size properties',
            description: 'calendarTable size properties',
            prefix: 'calendarTable',
            target: ['calendarTable'],
        },
    },
    currentDate: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'inputBox',
            displayName: 'inputBox font properties',
            description: 'inputBox font properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'inputBox',
            displayName: 'inputBox color properties',
            description: 'inputBox color properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
    },
    dateHeader: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'inputBox',
            displayName: 'inputBox font properties',
            description: 'inputBox font properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'inputBox',
            displayName: 'inputBox color properties',
            description: 'inputBox color properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
    },
    dateBody: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'inputBox',
            displayName: 'inputBox font properties',
            description: 'inputBox font properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'inputBox',
            displayName: 'inputBox color properties',
            description: 'inputBox color properties',
            prefix: 'inputBox',
            target: ['inputBox'],
        },
    },
    bottomButtonAndTime: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.flex.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.flex,
            name: 'bottomButtonAndTime',
            displayName: 'bottomButtonAndTime flex properties',
            description: 'bottomButtonAndTime flex properties',
            prefix: 'bottomButtonAndTime',
            target: ['bottomButtonAndTime'],
        }
    },
    bottomButton: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.flex.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.flex,
            name: 'bottomButton',
            displayName: 'bottomButton flex properties',
            description: 'bottomButton flex properties',
            prefix: 'bottomButton',
            target: ['bottomButton'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.padding.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.padding,
            name: 'bottomButton',
            displayName: 'bottomButton padding properties',
            description: 'bottomButton padding properties',
            prefix: 'bottomButton',
            target: ['bottomButton'],
        },
    },
    bottomButtonConfirm: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.background.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.background,
            name: 'bottomButtonConfirm',
            displayName: 'bottomButtonConfirm background properties',
            description: 'bottomButtonConfirm background properties',
            prefix: 'bottomButtonConfirm',
            target: ['bottomButtonConfirm'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.padding.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.padding,
            name: 'bottomButtonConfirm',
            displayName: 'bottomButtonConfirm padding properties',
            description: 'bottomButtonConfirm padding properties',
            prefix: 'bottomButtonConfirm',
            target: ['bottomButtonConfirm'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'bottomButtonConfirm',
            displayName: 'bottomButtonConfirm font properties',
            description: 'bottomButtonConfirm font properties',
            prefix: 'bottomButtonConfirm',
            target: ['bottomButtonConfirm'],
        },
    },
    bottomButtonCancel: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.background.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.background,
            name: 'bottomButtonCancel',
            displayName: 'bottomButtonCancel background properties',
            description: 'bottomButtonCancel background properties',
            prefix: 'bottomButtonCancel',
            target: ['bottomButtonCancel'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.padding.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.padding,
            name: 'bottomButtonCancel',
            displayName: 'bottomButtonCancel padding properties',
            description: 'bottomButtonCancel padding properties',
            prefix: 'bottomButtonCancel',
            target: ['bottomButtonCancel'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'bottomButtonCancel',
            displayName: 'bottomButtonCancel font properties',
            description: 'bottomButtonCancel font properties',
            prefix: 'bottomButtonCancel',
            target: ['bottomButtonCancel'],
        },
    },
    timeContainer: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.padding.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.padding,
            name: 'timeContainer',
            displayName: 'timeContainer padding properties',
            description: 'timeContainer padding properties',
            prefix: 'timeContainer',
            target: ['timeContainer'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.size.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.size,
            name: 'timeContainer',
            displayName: 'timeContainer size properties',
            description: 'timeContainer size properties',
            prefix: 'timeContainer',
            target: ['timeContainer'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.border.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.border,
            name: 'timeContainer',
            displayName: 'timeContainer border properties',
            description: 'timeContainer border properties',
            prefix: 'timeContainer',
            target: ['timeContainer'],
        },
    },
    timeLabel: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'timeLabel',
            displayName: 'timeLabel font properties',
            description: 'timeLabel font properties',
            prefix: 'timeLabel',
            target: ['timeLabel'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'timeLabel',
            displayName: 'timeLabel color properties',
            description: 'timeLabel color properties',
            prefix: 'timeLabel',
            target: ['timeLabel'],
        },
    },
    timeItems: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.font.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.font,
            name: 'timeItems',
            displayName: 'timeItems font properties',
            description: 'timeItems font properties',
            prefix: 'timeItems',
            target: ['timeItems'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.color.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'timeItems',
            displayName: 'timeItems color properties',
            description: 'timeItems color properties',
            prefix: 'timeItems',
            target: ['timeItems'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.padding.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.padding,
            name: 'timeItems',
            displayName: 'timeItems padding properties',
            description: 'timeItems padding properties',
            prefix: 'timeItems',
            target: ['timeItems'],
        },
    },
    dropdown: {
        [COMPONENT_STYLE_GROUP_PROPERTIES.size.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.size,
            name: 'dropdown',
            displayName: 'dropdown size properties',
            description: 'dropdown size properties',
            prefix: 'dropdown',
            target: ['dropdown'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.border.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.border,
            name: 'dropdown',
            displayName: 'dropdown border properties',
            description: 'dropdown border properties',
            prefix: 'dropdown',
            target: ['dropdown'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.boxShadow.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.color,
            name: 'dropdown',
            displayName: 'dropdown boxShadow properties',
            description: 'dropdown boxShadow properties',
            prefix: 'dropdown',
            target: ['dropdown'],
        },
        [COMPONENT_STYLE_GROUP_PROPERTIES.background.type]: {
            ...COMPONENT_STYLE_GROUP_PROPERTIES.background,
            name: 'dropdown',
            displayName: 'dropdown background properties',
            description: 'dropdown background properties',
            prefix: 'dropdown',
            target: ['dropdown'],
        },
    },
};

export { propertiesDefinition, stylePropertiesDefinition };