import { StyleGroupDefinition, StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		groupName: 'Font',
		displayName: 'Menu Font',
		name: 'menuFont',
		defaultValue: '<primaryFont>',
		description: 'Default font of the Menu',
		cssProperty: '',
		selector: '',
		noPrefix: false,
	},

	{
		groupName: 'Font',
		displayName: 'Default Menu Font',
		name: 'defaultDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Default Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Font',
		displayName: 'Oultine Menu Font',
		name: 'outlineDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Outline Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Font',
		displayName: 'Text Menu Font',
		name: 'textDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Text Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Font',
		displayName: 'Sides Menu Font',
		name: 'sidesDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Sides Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Font',
		displayName: 'Top Bottom Menu Font',
		name: 'topbottomDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Top Bottom Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Color',
		displayName: 'Primary Menu Color',
		name: 'primaryMenuColor',
		defaultValue: '<fontColorThree>',
		description: 'Menu Primary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._primary, .comp.compMenu._outlined._primary:visited, .comp.compMenu._text._primary._isActive, .comp.compMenu._text._primary:hover, .comp.compMenu._sides._primary._isActive, .comp.compMenu._sides._primary:hover, .comp.compMenu._topbottom._primary._isActive, .comp.compMenu._topbottom._primary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Color',
		displayName: 'Secondary Menu Color',
		name: 'secondaryMenuColor',
		defaultValue: '<fontColorFour>',
		description: 'Menu Secondary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._secondary, .comp.compMenu._outlined._secondary:visited, .comp.compMenu._text._secondary._isActive, .comp.compMenu._text._secondary:hover, .comp.compMenu._sides._secondary._isActive, .comp.compMenu._sides._secondary:hover, .comp.compMenu._topbottom._secondary._isActive, .comp.compMenu._topbottom._secondary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Color',
		displayName: 'Tertiary Menu Color',
		name: 'tertiaryMenuColor',
		defaultValue: '<fontColorFive>',
		description: 'Menu Tertiary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._tertiary, .comp.compMenu._outlined._tertiary:visited, .comp.compMenu._text._tertiary._isActive, .comp.compMenu._text._tertiary:hover, .comp.compMenu._sides._tertiary._isActive, .comp.compMenu._sides._tertiary:hover, .comp.compMenu._topbottom._tertiary._isActive, .comp.compMenu._topbottom._tertiary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Color',
		displayName: 'Quaternary Menu Color',
		name: 'quaternaryMenuColor',
		defaultValue: '<fontColorNine>',
		description: 'Menu Quaternary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._quaternary, .comp.compMenu._outlined._quaternary:visited, .comp.compMenu._text._quaternary._isActive, .comp.compMenu._text._quaternary:hover, .comp.compMenu._sides._quaternary._isActive, .comp.compMenu._sides._quaternary:hover, .comp.compMenu._topbottom._quaternary._isActive, .comp.compMenu._topbottom._quaternary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Color',
		displayName: 'Quinary Menu Color',
		name: 'quinaryMenuColor',
		defaultValue: '<fontColorSeven>',
		description: 'Menu Quinary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._quinary, .comp.compMenu._outlined._quinary:visited, .comp.compMenu._text._quinary._isActive, .comp.compMenu._text._quinary:hover, .comp.compMenu._sides._quinary._isActive, .comp.compMenu._sides._quinary:hover, .comp.compMenu._topbottom._quinary._isActive, .comp.compMenu._topbottom._quinary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Background Color',
		displayName: 'Primary Menu Background Color',
		name: 'primaryMenuBGColor',
		defaultValue: '<backgroundColorOne>',
		description: 'Menu Primary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._primary._isActive, .comp.compMenu._default._primary:hover, .comp.compMenu._outlined._primary._isActive, .comp.compMenu._outlined._primary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Background Color',
		displayName: 'Secondary Menu Background Color',
		name: 'secondaryMenuBGColor',
		defaultValue: '<backgroundColorTwo>',
		description: 'Menu Secondary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._secondary._isActive, .comp.compMenu._default._secondary:hover, .comp.compMenu._outlined._secondary._isActive, .comp.compMenu._outlined._secondary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Background Color',
		displayName: 'Tertiary Menu Background Color',
		name: 'tertiaryMenuBGColor',
		defaultValue: '<backgroundColorThree>',
		description: 'Menu Tertiary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._tertiary._isActive, .comp.compMenu._default._tertiary:hover, .comp.compMenu._outlined._tertiary._isActive, .comp.compMenu._outlined._tertiary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Background Color',
		displayName: 'Quaternary Menu Background Color',
		name: 'quaternaryMenuBGColor',
		defaultValue: '<backgroundColorFour>',
		description: 'Menu Quaternary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._quaternary._isActive, .comp.compMenu._default._quaternary:hover, .comp.compMenu._outlined._quaternary._isActive, .comp.compMenu._outlined._quaternary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Background Color',
		displayName: 'Quinary Menu Background Color',
		name: 'quinaryMenuBGColor',
		defaultValue: '<backgroundColorFive>',
		description: 'Menu Quinary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._quinary._isActive, .comp.compMenu._default._quinary:hover, .comp.compMenu._outlined._quinary._isActive, .comp.compMenu._outlined._quinary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Border Color',
		displayName: 'Primary Menu Border Color',
		name: 'primaryMenuBorderColor',
		defaultValue: '<primaryMenuColor>',
		description: 'Menu Primary border color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._primary, .comp.compMenu._outlined._primary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Border Color',
		displayName: 'Secondary Menu Border Color',
		name: 'secondaryMenuBorderColor',
		defaultValue: '<secondaryMenuColor>',
		description: 'Menu Secondary border color',
		cssProperty: 'border-color',
		selector:
			'.comp.compMenu._outlined._secondary, .comp.compMenu._outlined._secondary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Border Color',
		displayName: 'Tertiary Menu Border Color',
		name: 'tertiaryMenuBorderColor',
		defaultValue: '<tertiaryMenuColor>',
		description: 'Menu Tertiary border color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._tertiary, .comp.compMenu._outlined._tertiary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Border Color',
		displayName: 'Quaternary Menu Border Color',
		name: 'quaternaryMenuBorderColor',
		defaultValue: '<quaternaryMenuColor>',
		description: 'Menu Quaternary border color',
		cssProperty: 'border-color',
		selector:
			'.comp.compMenu._outlined._quaternary, .comp.compMenu._outlined._quaternary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Border Color',
		displayName: 'Quinary Menu Border Color',
		name: 'quinaryMenuBorderColor',
		defaultValue: '<quinaryMenuColor>',
		description: 'Menu Quinary border color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._quinary, .comp.compMenu._outlined._quinary:visited',
		noPrefix: true,
	},

	{
		groupName: 'Color',
		displayName: 'Menu Font Color',
		name: 'menuFontColor',
		defaultValue: '<fontColorEight>',
		description: 'Menu Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._primary, .comp.compMenu._default._primary:visited, .comp.compMenu._default._secondary, .comp.compMenu._default._secondary:visited, .comp.compMenu._default._tertiary, .comp.compMenu._default._tertiary:visited, .comp.compMenu._default._quaternary, .comp.compMenu._default._quaternary:visited, .comp.compMenu._default._quinary, .comp.compMenu._default._quinary:visited,.comp.comp.compMenu._text._primary, .comp.compMenu._text._primary:visited, .comp.compMenu._text._secondary, .comp.compMenu._text._secondary:visited, .comp.compMenu._text._tertiary, .comp.compMenu._text._tertiary:visited, .comp.compMenu._text._quaternary, .comp.compMenu._text._quaternary:visited, .comp.compMenu._text._quinary, .comp.compMenu._text._quinary:visited, .comp.compMenu._sides._primary, .comp.compMenu._sides._primary:visited, .comp.compMenu._sides._secondary, .comp.compMenu._sides._secondary:visited, .comp.compMenu._sides._tertiary, .comp.compMenu._sides._tertiary:visited, .comp.compMenu._sides._quaternary, .comp.compMenu._sides._quaternary:visited, .comp.compMenu._sides._quinary, .comp.compMenu._sides._quinary:visited, .comp.compMenu._topbottom._primary, .comp.compMenu._topbottom._primary:visited, .comp.compMenu._topbottom._secondary, .comp.compMenu._topbottom._secondary:visited, .comp.compMenu._topbottom._tertiary, .comp.compMenu._topbottom._tertiary:visited, .comp.compMenu._topbottom._quaternary, .comp.compMenu._topbottom._quaternary:visited, .comp.compMenu._topbottom._quinary, .comp.compMenu._topbottom._quinary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Color',
		displayName: 'Menu Light Font Color',
		name: 'menuLightFontColor',
		defaultValue: '<fontColorTwo>',
		description: 'Menu Light Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._primary._isActive, .comp.compMenu._default._primary:hover, .comp.compMenu._default._secondary._isActive, .comp.compMenu._default._secondary:hover, .comp.compMenu._default._quaternary._isActive, .comp.compMenu._default._quaternary:hover, .comp.compMenu._default._quinary._isActive, .comp.compMenu._default._quinary:hover, .comp.compMenu._outlined._primary._isActive, .comp.compMenu._outlined._primary:hover, .comp.compMenu._outlined._secondary._isActive, .comp.compMenu._outlined._secondary:hover, .comp.compMenu._outlined._quaternary._isActive, .comp.compMenu._outlined._quaternary:hover, .comp.compMenu._outlined._quinary._isActive, .comp.compMenu._outlined._quinary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Color',
		displayName: 'Menu Dark Font Color',
		name: 'menuDarkFontColor',
		defaultValue: '<fontColorOne>',
		description: 'Menu Dark Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._tertiary._isActive, .comp.compMenu._default._tertiary:hover, .comp.compMenu._outlined._tertiary._isActive, .comp.compMenu._outlined._tertiary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Text Decoration',
		displayName: 'Menu Text Decoration',
		name: 'menuTextDecoration',
		defaultValue: 'underline',
		description: 'Menu Text Decoration',
		cssProperty: '',
		selector: '',
		noPrefix: true,
	},

	{
		groupName: 'Padding',
		displayName: 'Menu Default Design Padding',
		name: 'defaultDesignPadding',
		defaultValue: '5px',
		description: 'Padding in Default Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Padding',
		displayName: 'Menu Outline Design Padding',
		name: 'outlineDesignPadding',
		defaultValue: '5px 9px',
		description: 'Padding in Outline Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Padding',
		displayName: 'Menu Text Design Padding',
		name: 'textDesignPadding',
		defaultValue: '0px',
		description: 'Padding in Text Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Padding',
		displayName: 'Menu Sides Design Padding',
		name: 'sidesDesignPadding',
		defaultValue: '4px 8px',
		description: 'Padding in Sides Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Padding',
		displayName: 'Menu Top Bottom Design Padding',
		name: 'topbottomDesignPadding',
		defaultValue: '4px 8px',
		description: 'Padding in Top Bottom Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Alignment',
		displayName: 'Menu Default Design Text Alignment',
		name: 'defaultDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Default Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Alignment',
		displayName: 'Menu Outline Design Text Alignment',
		name: 'outlineDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Outline Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Alignment',
		displayName: 'Menu Text Design Text Alignment',
		name: 'textDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Text Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Alignment',
		displayName: 'Menu Sides Design Text Alignment',
		name: 'sidesDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Sides Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Alignment',
		displayName: 'Menu Top Bottom Design Text Alignment',
		name: 'topbottomDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Top Bottom Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Radius',
		displayName: 'Menu Default Design Border Radius',
		name: 'defaultDesignBorderRadius',
		defaultValue: '3px',
		description: 'BorderRadius in Default Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Radius',
		displayName: 'Menu Outline Design Border Radius',
		name: 'outlineDesignBorderRadius',
		defaultValue: '50px',
		description: 'BorderRadius in Outline Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Radius',
		displayName: 'Menu Text Design Border Radius',
		name: 'textDesignBorderRadius',
		defaultValue: '',
		description: 'BorderRadius in Text Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Radius',
		displayName: 'Menu Sides Design Border Radius',
		name: 'sidesDesignBorderRadius',
		defaultValue: '',
		description: 'BorderRadius in Sides Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Radius',
		displayName: 'Menu Top Bottom Design Border Radius',
		name: 'topbottomDesignBorderRadius',
		defaultValue: '',
		description: 'BorderRadius in Top Bottom Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Font Weight',
		displayName: 'Menu Font Weight',
		name: 'menuFontWeight',
		defaultValue: '700',
		description: 'Menu Font Weight in Menu Design',
		cssProperty: 'font-weight',
		selector:
			'.comp.compMenu._text._primary._isActive, .comp.compMenu._text._primary:hover, .comp.compMenu._text._secondary._isActive, .comp.compMenu._text._secondary:hover, .comp.compMenu._text._tertiary._isActive, .comp.compMenu._text._tertiary:hover, .comp.compMenu._text._quaternary._isActive, .comp.compMenu._text._quaternary:hover, .comp.compMenu._text._quinary._isActive, .comp.compMenu._text._quinary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Border Width',
		displayName: 'Menu Default Design Border Width',
		name: 'defaultDesignBorderWidth',
		defaultValue: '',
		description: 'Border Width in Default Design',
		cssProperty: 'border-width',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Outline Design Border Width',
		name: 'outlineDesignBorderWidth',
		defaultValue: '1px',
		description: 'Border Width in Outline Design',
		cssProperty: 'border-width',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Text Design Border Width',
		name: 'textDesignBorderWidth',
		defaultValue: '',
		description: 'Border Width in Text Design',
		cssProperty: 'border-width',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Sides Design Border Width',
		name: 'sideDesignBorderWidth',
		defaultValue: '',
		description: 'Border Width in Sides Design',
		cssProperty: 'border-width',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Top Bottom Design Border Width',
		name: 'topbottomDesignBorderWidth',
		defaultValue: '',
		description: 'Border Width in Top Bottom Design',
		cssProperty: 'border-width',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Style',
		displayName: 'Menu Default Design Border Style',
		name: 'defaultDesignBorderStyle',
		defaultValue: '',
		description: 'Border Style in Default Design',
		cssProperty: 'border-style',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Outline Design Border Style',
		name: 'outlineDesignBorderStyle',
		defaultValue: 'solid',
		description: 'Border Style in Outline Design',
		cssProperty: 'border-style',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Text Design Border Style',
		name: 'textDesignBorderStyle',
		defaultValue: '',
		description: 'Border Style in Text Design',
		cssProperty: 'border-style',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Sides Design Border Style',
		name: 'sideDesignBorderStyle',
		defaultValue: '',
		description: 'Border Style in Sides Design',
		cssProperty: 'border-style',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Top Bottom Design Border Style',
		name: 'topbottomDesignBorderStyle',
		defaultValue: '',
		description: 'Border Style in Top Bottom Design',
		cssProperty: 'border-style',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Width',
		displayName: 'Menu Default Design Border Left Width',
		name: 'defaultDesignBorderLeftWidth',
		defaultValue: '',
		description: 'Border Left Width in Default Design',
		cssProperty: 'border-left-width',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Outline Design Border Left Width',
		name: 'outlineDesignBorderLeftWidth',
		defaultValue: '',
		description: 'Border Left Width in Outline Design',
		cssProperty: 'border-left-width',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Text Design Border Left Width',
		name: 'textDesignBorderLeftWidth',
		defaultValue: '',
		description: 'Border Left Width in Text Design',
		cssProperty: 'border-left-width',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Sides Design Border Left Width',
		name: 'sideDesignBorderLeftWidth',
		defaultValue: '1px',
		description: 'Border Left Width in Sides Design',
		cssProperty: 'border-left-width',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Top Bottom Design Border Left Width',
		name: 'topbottomDesignBorderLeftWidth',
		defaultValue: '',
		description: 'Border Left Width in Top Bottom Design',
		cssProperty: 'border-left-width',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Width',
		displayName: 'Menu Default Design Border Right Width',
		name: 'defaultDesignBorderRightWidth',
		defaultValue: '',
		description: 'Border Right Width in Default Design',
		cssProperty: 'border-right-width',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Outline Design Border Right Width',
		name: 'outlineDesignBorderRightWidth',
		defaultValue: '1px',
		description: 'Border Right Width in Outline Design',
		cssProperty: 'border-right-width',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Text Design Border Right Width',
		name: 'textDesignBorderRightWidth',
		defaultValue: '',
		description: 'Border Right Width in Text Design',
		cssProperty: 'border-right-width',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Sides Design Border Right Width',
		name: 'sideDesignBorderRightWidth',
		defaultValue: '1px',
		description: 'Border Right Width in Sides Design',
		cssProperty: 'border-right-width',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Top Bottom Design Border Right Width',
		name: 'topbottomDesignBorderRightWidth',
		defaultValue: '',
		description: 'Border Right Width in Top Bottom Design',
		cssProperty: 'border-right-width',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Width',
		displayName: 'Menu Default Design Border Top Width',
		name: 'defaultDesignBorderTopWidth',
		defaultValue: '',
		description: 'Border Top Width in Default Design',
		cssProperty: 'border-top-width',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Outline Design Border Top Width',
		name: 'outlineDesignBorderTopWidth',
		defaultValue: '1px',
		description: 'Border Top Width in Outline Design',
		cssProperty: 'border-top-width',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Text Design Border Top Width',
		name: 'textDesignBorderTopWidth',
		defaultValue: '',
		description: 'Border Top Width in Text Design',
		cssProperty: 'border-top-width',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Sides Design Border Top Width',
		name: 'sideDesignBorderTopWidth',
		defaultValue: '',
		description: 'Border Top Width in Sides Design',
		cssProperty: 'border-top-width',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Top Bottom Design Border Top Width',
		name: 'topbottomDesignBorderTopWidth',
		defaultValue: '1px',
		description: 'Border Top Width in Top Bottom Design',
		cssProperty: 'border-top-width',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Width',
		displayName: 'Menu Default Design Border Bottom Width',
		name: 'defaultDesignBorderBottomWidth',
		defaultValue: '',
		description: 'Border Bottom Width in Default Design',
		cssProperty: 'border-bottom-width',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Outline Design Border Bottom Width',
		name: 'outlineDesignBorderBottomWidth',
		defaultValue: '1px',
		description: 'Border Bottom Width in Outline Design',
		cssProperty: 'border-bottom-width',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Text Design Border Bottom Width',
		name: 'textDesignBorderBottomWidth',
		defaultValue: '',
		description: 'Border Bottom Width in Text Design',
		cssProperty: 'border-bottom-width',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Sides Design Border Bottom Width',
		name: 'sideDesignBorderBottomWidth',
		defaultValue: '',
		description: 'Border Bottom Width in Sides Design',
		cssProperty: 'border-bottom-width',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Width',
		displayName: 'Menu Top Bottom Design Border Bottom Width',
		name: 'topbottomDesignBorderBottomWidth',
		defaultValue: '1px',
		description: 'Border Bottom Width in Top Bottom Design',
		cssProperty: 'border-bottom-width',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Style',
		displayName: 'Menu Default Design Border Left Style',
		name: 'defaultDesignBorderLeftStyle',
		defaultValue: '',
		description: 'Border Left Style in Default Design',
		cssProperty: 'border-left-style',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Outline Design Border Left Style',
		name: 'outlineDesignBorderLeftStyle',
		defaultValue: '',
		description: 'Border Left Style in Outline Design',
		cssProperty: 'border-left-style',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Text Design Border Left Style',
		name: 'textDesignBorderLeftStyle',
		defaultValue: '',
		description: 'Border Left Style in Text Design',
		cssProperty: 'border-left-style',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Sides Design Border Left Style',
		name: 'sideDesignBorderLeftStyle',
		defaultValue: 'solid',
		description: 'Border Left Style in Sides Design',
		cssProperty: 'border-left-style',
		selector: '.comp.compMenu._sides._isActive, .comp.compMenu._sides:hover',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Top Bottom Design Border Left Style',
		name: 'topbottomDesignBorderLeftStyle',
		defaultValue: '',
		description: 'Border Left Style in Top Bottom Design',
		cssProperty: 'border-left-style',
		selector: '.comp.compMenu._topbottom._isActive, .comp.compMenu._topbottom:hover',
		noPrefix: true,
	},

	{
		groupName: 'Border Style',
		displayName: 'Menu Default Design Border Right Style',
		name: 'defaultDesignBorderRightStyle',
		defaultValue: '',
		description: 'Border Right Style in Default Design',
		cssProperty: 'border-right-style',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Outline Design Border Right Style',
		name: 'outlineDesignBorderRightStyle',
		defaultValue: '',
		description: 'Border Right Style in Outline Design',
		cssProperty: 'border-right-style',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Text Design Border Right Style',
		name: 'textDesignBorderRightStyle',
		defaultValue: '',
		description: 'Border Right Style in Text Design',
		cssProperty: 'border-right-style',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Sides Design Border Right Style',
		name: 'sideDesignBorderRightStyle',
		defaultValue: 'solid',
		description: 'Border Right Style in Sides Design',
		cssProperty: 'border-right-style',
		selector: '.comp.compMenu._sides._isActive, .comp.compMenu._sides:hover',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Top Bottom Design Border Right Style',
		name: 'topbottomDesignBorderRightStyle',
		defaultValue: '',
		description: 'Border Right Style in Top Bottom Design',
		cssProperty: 'border-right-style',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Border Style',
		displayName: 'Menu Default Design Border Top Style',
		name: 'defaultDesignBorderTopStyle',
		defaultValue: '',
		description: 'Border Top Style in Default Design',
		cssProperty: 'border-top-style',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Outline Design Border Top Style',
		name: 'outlineDesignBorderTopStyle',
		defaultValue: '',
		description: 'Border Top Style in Outline Design',
		cssProperty: 'border-top-style',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Text Design Border Top Style',
		name: 'textDesignBorderTopStyle',
		defaultValue: '',
		description: 'Border Top Style in Text Design',
		cssProperty: 'border-top-style',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Sides Design Border Top Style',
		name: 'sideDesignBorderTopStyle',
		defaultValue: '',
		description: 'Border Top Style in Sides Design',
		cssProperty: 'border-top-style',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Top Bottom Design Border Top Style',
		name: 'topbottomDesignBorderTopStyle',
		defaultValue: 'solid',
		description: 'Border Top Style in Top Bottom Design',
		cssProperty: 'border-top-style',
		selector: '.comp.compMenu._topbottom._isActive, .comp.compMenu._topbottom:hover',
		noPrefix: true,
	},

	{
		groupName: 'Border Style',
		displayName: 'Menu Default Design Border Bottom Style',
		name: 'defaultDesignBorderBottomStyle',
		defaultValue: '',
		description: 'Border Bottom Style in Default Design',
		cssProperty: 'border-bottom-style',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Outline Design Border Bottom Style',
		name: 'outlineDesignBorderBottomStyle',
		defaultValue: '',
		description: 'Border Bottom Style in Outline Design',
		cssProperty: 'border-bottom-style',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Text Design Border Bottom Style',
		name: 'textDesignBorderBottomStyle',
		defaultValue: '',
		description: 'Border Bottom Style in Text Design',
		cssProperty: 'border-bottom-style',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Sides Design Border Bottom Style',
		name: 'sideDesignBorderBottomStyle',
		defaultValue: '',
		description: 'Border Bottom Style in Sides Design',
		cssProperty: 'border-bottom-style',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Border Style',
		displayName: 'Menu Top Bottom Design Border Bottom Style',
		name: 'topbottomDesignBorderBottomStyle',
		defaultValue: 'solid',
		description: 'Border Bottom Style in Top Bottom Design',
		cssProperty: 'border-bottom-style',
		selector: '.comp.compMenu._topbottom._isActive, .comp.compMenu._topbottom:hover',
		noPrefix: true,
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
