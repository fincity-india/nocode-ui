import { StyleGroupDefinition, StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		groupName: '',
		displayName: '',
		name: 'menuFont',
		defaultValue: '<primaryFont>',
		description: 'Default font of the Menu',
		cssProperty: '',
		selector: '',
		noPrefix: false,
	},

	{
		groupName: '',
		displayName: '',
		name: 'defaultDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Default Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'outlineDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Outline Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'textDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Text Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'sidesDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Sides Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'topbottomDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Top Bottom Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'primaryMenuColor',
		defaultValue: '<fontColorThree>',
		description: 'Menu Primary font color',
		cssProperty: 'color',
		selector: '.comp.compMenu._outlined._primary, .comp.compMenu._outlined._primary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'secondaryMenuColor',
		defaultValue: '<fontColorFour>',
		description: 'Menu Secondary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._secondary, .comp.compMenu._outlined._secondary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'tertiaryMenuColor',
		defaultValue: '<fontColorFive>',
		description: 'Menu Tertiary font color',
		cssProperty: 'color',
		selector: '.comp.compMenu._outlined._tertiary, .comp.compMenu._outlined._tertiary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'quaternaryMenuColor',
		defaultValue: '<fontColorNine>',
		description: 'Menu Quaternary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._quaternary, .comp.compMenu._outlined._quaternary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'quinaryMenuColor',
		defaultValue: '<fontColorSeven>',
		description: 'Menu Quinary font color',
		cssProperty: 'color',
		selector: '.comp.compMenu._outlined._quinary, .comp.compMenu._outlined._quinary:visited',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'primaryMenuBGColor',
		defaultValue: '<backgroundColorOne>',
		description: 'Menu Primary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._primary._isActive, .comp.compMenu._default._primary:hover, .comp.compMenu._outlined._primary._isActive, .comp.compMenu._outlined._primary:hover',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'secondaryMenuBGColor',
		defaultValue: '<backgroundColorTwo>',
		description: 'Menu Secondary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._secondary._isActive, .comp.compMenu._default._secondary:hover, .comp.compMenu._outlined._secondary._isActive, .comp.compMenu._outlined._secondary:hover',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'tertiaryMenuBGColor',
		defaultValue: '<backgroundColorThree>',
		description: 'Menu Tertiary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._tertiary._isActive, .comp.compMenu._default._tertiary:hover, .comp.compMenu._outlined._tertiary._isActive, .comp.compMenu._outlined._tertiary:hover',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'quaternaryMenuBGColor',
		defaultValue: '<backgroundColorFour>',
		description: 'Menu Quaternary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._quaternary._isActive, .comp.compMenu._default._quaternary:hover, .comp.compMenu._outlined._quaternary._isActive, .comp.compMenu._outlined._quaternary:hover',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'quinaryMenuBGColor',
		defaultValue: '<backgroundColorFive>',
		description: 'Menu Quinary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._quinary._isActive, .comp.compMenu._default._quinary:hover, .comp.compMenu._outlined._quinary._isActive, .comp.compMenu._outlined._quinary:hover',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'primaryMenuBorderColor',
		defaultValue: '<primaryMenuColor>',
		description: 'Menu Primary background color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._primary, .comp.compMenu._outlined._primary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'secondaryMenuBorderColor',
		defaultValue: '<secondaryMenuColor>',
		description: 'Menu Secondary background color',
		cssProperty: 'border-color',
		selector:
			'.comp.compMenu._outlined._secondary, .comp.compMenu._outlined._secondary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'tertiaryMenuBorderColor',
		defaultValue: '<tertiaryMenuColor>',
		description: 'Menu Tertiary background color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._tertiary, .comp.compMenu._outlined._tertiary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'quaternaryMenuBorderColor',
		defaultValue: '<quaternaryMenuColor>',
		description: 'Menu Quaternary background color',
		cssProperty: 'border-color',
		selector:
			'.comp.compMenu._outlined._quaternary, .comp.compMenu._outlined._quaternary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'quinaryMenuBorderColor',
		defaultValue: '<quinaryMenuColor>',
		description: 'Menu Quinary background color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._quinary, .comp.compMenu._outlined._quinary:visited',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'menuFontColor',
		defaultValue: '<fontColorEight>',
		description: 'Menu Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._primary, .comp.compMenu._default._primary:visited, .comp.compMenu._default._secondary, .comp.compMenu._default._secondary:visited, .comp.compMenu._default._tertiary, .comp.compMenu._default._tertiary:visited, .comp.compMenu._default._quaternary, .comp.compMenu._default._quaternary:visited, .comp.compMenu._default._quinary, .comp.compMenu._default._quinary:visited',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'menuLightFontColor',
		defaultValue: '<fontColorTwo>',
		description: 'Menu Light Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._primary._isActive, .comp.compMenu._default._primary:hover, .comp.compMenu._default._secondary._isActive, .comp.compMenu._default._secondary:hover, .comp.compMenu._default._quaternary._isActive, .comp.compMenu._default._quaternary:hover, .comp.compMenu._default._quinary._isActive, .comp.compMenu._default._quinary:hover, .comp.compMenu._outlined._primary._isActive, .comp.compMenu._outlined._primary:hover, .comp.compMenu._outlined._secondary._isActive, .comp.compMenu._outlined._secondary:hover, .comp.compMenu._outlined._quaternary._isActive, .comp.compMenu._outlined._quaternary:hover, .comp.compMenu._outlined._quinary._isActive, .comp.compMenu._outlined._quinary:hover',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'menuDarkFontColor',
		defaultValue: '<fontColorOne>',
		description: 'Menu Dark Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._tertiary._isActive, .comp.compMenu._default._tertiary:hover, .comp.compMenu._outlined._tertiary._isActive, .comp.compMenu._outlined._tertiary:hover',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'menuBorder',
		defaultValue: '1px solid',
		description: 'Menu Border Style',
		cssProperty: '',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'menuTextDecoration',
		defaultValue: 'underline',
		description: 'Menu Text Decoration',
		cssProperty: '',
		selector: '',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'defaultDesignPadding',
		defaultValue: '5px',
		description: 'Padding in Default Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'outlineDesignPadding',
		defaultValue: '5px 9px',
		description: 'Padding in Outline Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'textDesignPadding',
		defaultValue: '0px',
		description: 'Padding in Text Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'sidesDesignPadding',
		defaultValue: '4px 8px',
		description: 'Padding in Sides Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'topbottomDesignPadding',
		defaultValue: '4px 8px',
		description: 'Padding in Top Bottom Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'defaultDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Default Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'outlineDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Outline Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'textDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Text Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'sidesDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Sides Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'topbottomDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Top Bottom Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: '',
		displayName: '',
		name: 'defaultDesignBorderRadius',
		defaultValue: '3px',
		description: 'BorderRadius in Default Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'outlineDesignBorderRadius',
		defaultValue: '3px',
		description: 'BorderRadius in Outline Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'textDesignBorderRadius',
		defaultValue: '0.5',
		description: 'BorderRadius in Text Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'sidesDesignBorderRadius',
		defaultValue: '3px',
		description: 'BorderRadius in Sides Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: '',
		displayName: '',
		name: 'topbottomDesignBorderRadius',
		defaultValue: '3px',
		description: 'BorderRadius in Top Bottom Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
