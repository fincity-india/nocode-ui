import { StyleGroupDefinition, StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		groupName: 'Menu Font',
		displayName: 'Menu Font',
		name: 'menuFont',
		defaultValue: '<primaryFont>',
		description: 'Default font of the Menu',
		cssProperty: 'font',
		selector: '',
		noPrefix: false,
	},

	{
		groupName: 'Default',
		displayName: 'Default Menu Font',
		name: 'defaultMenuDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Default Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Outline',
		displayName: 'Outline Menu Font',
		name: 'outlineMenuDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Outline Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Text',
		displayName: 'Text Menu Font',
		name: 'textMenuDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Text Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Sides',
		displayName: 'Sides Menu Font',
		name: 'sidesMenuDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Sides Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Top Bottom',
		displayName: 'Top Bottom Menu Font',
		name: 'topbottomMenuDesignFont',
		defaultValue: '<menuFont>',
		description: 'Font in Top Bottom Design',
		cssProperty: 'font',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Menu Color',
		displayName: 'Primary Menu Color',
		name: 'primaryMenuColor',
		defaultValue: '<fontColorThree>',
		description: 'Menu Primary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._primary, .comp.compMenu._outlined._primary:visited, .comp.compMenu._text._primary._isActive, .comp.compMenu._text._primary:hover, .comp.compMenu._sides._primary._isActive, .comp.compMenu._sides._primary:hover, .comp.compMenu._topbottom._primary._isActive, .comp.compMenu._topbottom._primary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Color',
		displayName: 'Secondary Menu Color',
		name: 'secondaryMenuColor',
		defaultValue: '<fontColorFour>',
		description: 'Menu Secondary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._secondary, .comp.compMenu._outlined._secondary:visited, .comp.compMenu._text._secondary._isActive, .comp.compMenu._text._secondary:hover, .comp.compMenu._sides._secondary._isActive, .comp.compMenu._sides._secondary:hover, .comp.compMenu._topbottom._secondary._isActive, .comp.compMenu._topbottom._secondary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Color',
		displayName: 'Tertiary Menu Color',
		name: 'tertiaryMenuColor',
		defaultValue: '<fontColorFive>',
		description: 'Menu Tertiary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._tertiary, .comp.compMenu._outlined._tertiary:visited, .comp.compMenu._text._tertiary._isActive, .comp.compMenu._text._tertiary:hover, .comp.compMenu._sides._tertiary._isActive, .comp.compMenu._sides._tertiary:hover, .comp.compMenu._topbottom._tertiary._isActive, .comp.compMenu._topbottom._tertiary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Color',
		displayName: 'Quaternary Menu Color',
		name: 'quaternaryMenuColor',
		defaultValue: '<fontColorNine>',
		description: 'Menu Quaternary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._quaternary, .comp.compMenu._outlined._quaternary:visited, .comp.compMenu._text._quaternary._isActive, .comp.compMenu._text._quaternary:hover, .comp.compMenu._sides._quaternary._isActive, .comp.compMenu._sides._quaternary:hover, .comp.compMenu._topbottom._quaternary._isActive, .comp.compMenu._topbottom._quaternary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Color',
		displayName: 'Quinary Menu Color',
		name: 'quinaryMenuColor',
		defaultValue: '<fontColorSeven>',
		description: 'Menu Quinary font color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._outlined._quinary, .comp.compMenu._outlined._quinary:visited, .comp.compMenu._text._quinary._isActive, .comp.compMenu._text._quinary:hover, .comp.compMenu._sides._quinary._isActive, .comp.compMenu._sides._quinary:hover, .comp.compMenu._topbottom._quinary._isActive, .comp.compMenu._topbottom._quinary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Menu Background Color',
		displayName: 'Primary Menu Background Color',
		name: 'primaryMenuBGColor',
		defaultValue: '<backgroundColorOne>',
		description: 'Menu Primary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._primary._isActive, .comp.compMenu._default._primary:hover, .comp.compMenu._outlined._primary._isActive, .comp.compMenu._outlined._primary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Background Color',
		displayName: 'Secondary Menu Background Color',
		name: 'secondaryMenuBGColor',
		defaultValue: '<backgroundColorTwo>',
		description: 'Menu Secondary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._secondary._isActive, .comp.compMenu._default._secondary:hover, .comp.compMenu._outlined._secondary._isActive, .comp.compMenu._outlined._secondary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Background Color',
		displayName: 'Tertiary Menu Background Color',
		name: 'tertiaryMenuBGColor',
		defaultValue: '<backgroundColorThree>',
		description: 'Menu Tertiary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._tertiary._isActive, .comp.compMenu._default._tertiary:hover, .comp.compMenu._outlined._tertiary._isActive, .comp.compMenu._outlined._tertiary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Background Color',
		displayName: 'Quaternary Menu Background Color',
		name: 'quaternaryMenuBGColor',
		defaultValue: '<backgroundColorFour>',
		description: 'Menu Quaternary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._quaternary._isActive, .comp.compMenu._default._quaternary:hover, .comp.compMenu._outlined._quaternary._isActive, .comp.compMenu._outlined._quaternary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Background Color',
		displayName: 'Quinary Menu Background Color',
		name: 'quinaryMenuBGColor',
		defaultValue: '<backgroundColorFive>',
		description: 'Menu Quinary background color',
		cssProperty: 'background',
		selector:
			'.comp.compMenu._default._quinary._isActive, .comp.compMenu._default._quinary:hover, .comp.compMenu._outlined._quinary._isActive, .comp.compMenu._outlined._quinary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Menu Border Color',
		displayName: 'Primary Menu Border Color',
		name: 'primaryMenuBorderColor',
		defaultValue: '<primaryMenuColor>',
		description: 'Menu Primary border color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._primary, .comp.compMenu._outlined._primary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Menu Border Color',
		displayName: 'Secondary Menu Border Color',
		name: 'secondaryMenuBorderColor',
		defaultValue: '<secondaryMenuColor>',
		description: 'Menu Secondary border color',
		cssProperty: 'border-color',
		selector:
			'.comp.compMenu._outlined._secondary, .comp.compMenu._outlined._secondary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Menu Border Color',
		displayName: 'Tertiary Menu Border Color',
		name: 'tertiaryMenuBorderColor',
		defaultValue: '<tertiaryMenuColor>',
		description: 'Menu Tertiary border color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._tertiary, .comp.compMenu._outlined._tertiary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Menu Border Color',
		displayName: 'Quaternary Menu Border Color',
		name: 'quaternaryMenuBorderColor',
		defaultValue: '<quaternaryMenuColor>',
		description: 'Menu Quaternary border color',
		cssProperty: 'border-color',
		selector:
			'.comp.compMenu._outlined._quaternary, .comp.compMenu._outlined._quaternary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Menu Border Color',
		displayName: 'Quinary Menu Border Color',
		name: 'quinaryMenuBorderColor',
		defaultValue: '<quinaryMenuColor>',
		description: 'Menu Quinary border color',
		cssProperty: 'border-color',
		selector: '.comp.compMenu._outlined._quinary, .comp.compMenu._outlined._quinary:visited',
		noPrefix: true,
	},

	{
		groupName: 'Menu Color',
		displayName: 'Menu Font Color',
		name: 'menuFontColor',
		defaultValue: '<fontColorEight>',
		description: 'Menu Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._primary, .comp.compMenu._default._primary:visited, .comp.compMenu._default._secondary, .comp.compMenu._default._secondary:visited, .comp.compMenu._default._tertiary, .comp.compMenu._default._tertiary:visited, .comp.compMenu._default._quaternary, .comp.compMenu._default._quaternary:visited, .comp.compMenu._default._quinary, .comp.compMenu._default._quinary:visited,.comp.compMenu._text._primary, .comp.compMenu._text._primary:visited, .comp.compMenu._text._secondary, .comp.compMenu._text._secondary:visited, .comp.compMenu._text._tertiary, .comp.compMenu._text._tertiary:visited, .comp.compMenu._text._quaternary, .comp.compMenu._text._quaternary:visited, .comp.compMenu._text._quinary, .comp.compMenu._text._quinary:visited, .comp.compMenu._sides._primary, .comp.compMenu._sides._primary:visited, .comp.compMenu._sides._secondary, .comp.compMenu._sides._secondary:visited, .comp.compMenu._sides._tertiary, .comp.compMenu._sides._tertiary:visited, .comp.compMenu._sides._quaternary, .comp.compMenu._sides._quaternary:visited, .comp.compMenu._sides._quinary, .comp.compMenu._sides._quinary:visited, .comp.compMenu._topbottom._primary, .comp.compMenu._topbottom._primary:visited, .comp.compMenu._topbottom._secondary, .comp.compMenu._topbottom._secondary:visited, .comp.compMenu._topbottom._tertiary, .comp.compMenu._topbottom._tertiary:visited, .comp.compMenu._topbottom._quaternary, .comp.compMenu._topbottom._quaternary:visited, .comp.compMenu._topbottom._quinary, .comp.compMenu._topbottom._quinary:visited',
		noPrefix: true,
	},
	{
		groupName: 'Menu Color',
		displayName: 'Menu Light Font Color',
		name: 'menuLightFontColor',
		defaultValue: '<fontColorTwo>',
		description: 'Menu Light Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._primary._isActive, .comp.compMenu._default._primary:hover, .comp.compMenu._default._secondary._isActive, .comp.compMenu._default._secondary:hover, .comp.compMenu._default._quaternary._isActive, .comp.compMenu._default._quaternary:hover, .comp.compMenu._default._quinary._isActive, .comp.compMenu._default._quinary:hover, .comp.compMenu._outlined._primary._isActive, .comp.compMenu._outlined._primary:hover, .comp.compMenu._outlined._secondary._isActive, .comp.compMenu._outlined._secondary:hover, .comp.compMenu._outlined._tertiary._isActive, .comp.compMenu._outlined._tertiary:hover, .comp.compMenu._outlined._quaternary._isActive, .comp.compMenu._outlined._quaternary:hover, .comp.compMenu._outlined._quinary._isActive, .comp.compMenu._outlined._quinary:hover',
		noPrefix: true,
	},
	{
		groupName: 'Menu Color',
		displayName: 'Menu Dark Font Color',
		name: 'menuDarkFontColor',
		defaultValue: '<fontColorOne>',
		description: 'Menu Dark Font Color',
		cssProperty: 'color',
		selector:
			'.comp.compMenu._default._tertiary._isActive, .comp.compMenu._default._tertiary:hover, .comp.compMenu._outlined._tertiary._isActive, .comp.compMenu._outlined._tertiary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Menu Text Decoration',
		displayName: 'Menu Text Decoration',
		name: 'menuTextDecoration',
		defaultValue: 'underline',
		description: 'Menu Text Decoration',
		cssProperty: '',
		selector: '',
		noPrefix: true,
	},

	{
		groupName: 'Default',
		displayName: 'Menu Default Design Padding',
		name: 'defaultMenuDesignPadding',
		defaultValue: '5px',
		description: 'Padding in Default Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Outline',
		displayName: 'Menu Outline Design Padding',
		name: 'outlineMenuDesignPadding',
		defaultValue: '5px 9px',
		description: 'Padding in Outline Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Text',
		displayName: 'Menu Text Design Padding',
		name: 'textMenuDesignPadding',
		defaultValue: '0px',
		description: 'Padding in Text Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Sides',
		displayName: 'Menu Sides Design Padding',
		name: 'sidesMenuDesignPadding',
		defaultValue: '4px 8px',
		description: 'Padding in Sides Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Top Bottom',
		displayName: 'Menu Top Bottom Design Padding',
		name: 'topbottomMenuDesignPadding',
		defaultValue: '4px 8px',
		description: 'Padding in Top Bottom Design',
		cssProperty: 'padding',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Default',
		displayName: 'Menu Default Design Text Alignment',
		name: 'defaultMenuDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Default Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Outline',
		displayName: 'Menu Outline Design Text Alignment',
		name: 'outlineMenuDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Outline Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Text',
		displayName: 'Menu Text Design Text Alignment',
		name: 'textMenuDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Text Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Sides',
		displayName: 'Menu Sides Design Text Alignment',
		name: 'sidesMenuDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Sides Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Top Bottom',
		displayName: 'Menu Top Bottom Design Text Alignment',
		name: 'topbottomMenuDesignTextAlign',
		defaultValue: '',
		description: 'TextAlign in Top Bottom Design',
		cssProperty: 'text-align',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Default',
		displayName: 'Menu Default Design Border Radius',
		name: 'defaultMenuDesignBorderRadius',
		defaultValue: '3px',
		description: 'BorderRadius in Default Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Outline',
		displayName: 'Menu Outline Design Border Radius',
		name: 'outlineMenuDesignBorderRadius',
		defaultValue: '50px',
		description: 'BorderRadius in Outline Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Text',
		displayName: 'Menu Text Design Border Radius',
		name: 'textMenuDesignBorderRadius',
		defaultValue: '',
		description: 'BorderRadius in Text Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Sides',
		displayName: 'Menu Sides Design Border Radius',
		name: 'sidesMenuDesignBorderRadius',
		defaultValue: '',
		description: 'BorderRadius in Sides Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Top Bottom',
		displayName: 'Menu Top Bottom Design Border Radius',
		name: 'topbottomMenuDesignBorderRadius',
		defaultValue: '',
		description: 'BorderRadius in Top Bottom Design',
		cssProperty: 'border-radius',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},

	{
		groupName: 'Menu Font',
		displayName: 'Menu Font Weight',
		name: 'menuFontWeight',
		defaultValue: '700',
		description: 'Menu Font Weight in Menu Design',
		cssProperty: 'font-weight',
		selector:
			'.comp.compMenu._text._primary._isActive, .comp.compMenu._text._primary:hover, .comp.compMenu._text._secondary._isActive, .comp.compMenu._text._secondary:hover, .comp.compMenu._text._tertiary._isActive, .comp.compMenu._text._tertiary:hover, .comp.compMenu._text._quaternary._isActive, .comp.compMenu._text._quaternary:hover, .comp.compMenu._text._quinary._isActive, .comp.compMenu._text._quinary:hover',
		noPrefix: true,
	},

	{
		groupName: 'Default',
		displayName: 'Menu Default Design Active Border',
		name: 'defaultMenuDesignActiveBorder',
		defaultValue: '',
		description: 'Active Border in Default Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._default._isActive, .comp.compMenu._default:hover',
		noPrefix: true,
	},
	{
		groupName: 'Outline',
		displayName: 'Menu Outline Design Active Border',
		name: 'outlineMenuDesignActiveBorder',
		defaultValue: '1px solid transparent',
		description: 'Active Border in Outline Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._outlined._isActive, .comp.compMenu._outlined:hover',
		noPrefix: true,
	},
	{
		groupName: 'Text',
		displayName: 'Menu Text Design Active Border',
		name: 'textMenuDesignActiveBorder',
		defaultValue: '',
		description: 'Active Border in Text Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._text._isActive, .comp.compMenu._text:hover',
		noPrefix: true,
	},
	{
		groupName: 'Sides',
		displayName: 'Menu Sides Design Active Border',
		name: 'sideMenuDesignActiveBorder',
		defaultValue: '1px solid transparent, 1px solid, 1px solid transparent, 1px solid',
		description: 'Active Border in Sides Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._sides._isActive, .comp.compMenu._sides:hover',
		noPrefix: true,
	},
	{
		groupName: 'Top Bottom',
		displayName: 'Menu Top Bottom Design Active Border',
		name: 'topbottomMenuDesignActiveBorder',
		defaultValue: '1px solid, 1px solid transparent, 1px solid, 1px solid transparent',
		description: 'Active Border in Top Bottom Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._topbottom._isActive, .comp.compMenu._topbottom:hover',
		noPrefix: true,
	},

	{
		groupName: 'Default',
		displayName: 'Menu Default Design Border',
		name: 'defaultMenuDesignBorder',
		defaultValue: '',
		description: 'Border in Default Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._default',
		noPrefix: true,
	},
	{
		groupName: 'Outline',
		displayName: 'Menu Outline Design Border',
		name: 'outlineMenuDesignBorder',
		defaultValue: '1px solid',
		description: 'Border in Outline Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._outlined',
		noPrefix: true,
	},
	{
		groupName: 'Text',
		displayName: 'Menu Text Design Border',
		name: 'textMenuDesignBorder',
		defaultValue: '',
		description: 'Border in Text Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._text',
		noPrefix: true,
	},
	{
		groupName: 'Sides',
		displayName: 'Menu Sides Design Border',
		name: 'sidesMenuDesignBorder',
		defaultValue: '1px solid transparent',
		description: 'Border in Sides Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._sides',
		noPrefix: true,
	},
	{
		groupName: 'Top Bottom',
		displayName: 'Menu Top Bottom Design Border',
		name: 'topbottomMenuDesignBorder',
		defaultValue: '1px solid transparent',
		description: 'Border in Top Bottom Design',
		cssProperty: 'border',
		selector: '.comp.compMenu._topbottom',
		noPrefix: true,
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
