import { StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		name: 'menuMinWidth',
		cssProperty: 'min-width',
		displayName: "Menu's minimum width",
		description: "Menu's minimum width.",
		selector: '.menu',
	},
	{
		name: 'menuMaxWidth',
		cssProperty: 'max-width',
		displayName: "Menu's maximum width",
		description: "Menu's maximum width.",
		selector: '.menu',
	},
	{
		name: 'menuHeight',
		cssProperty: 'height',
		displayName: "Menu's height",
		description: "Menu's height.",
		defaultValue: '60px',
		selector: '.menu',
	},
	{
		name: 'menuBgColor',
		cssProperty: 'background-color',
		displayName: "Menu's background color",
		description: "Menu's background color.",
		defaultValue: '#212B35',
		selector: '.menuItemsContainer',
	},
	{
		name: 'menuBgColorHover',
		cssProperty: 'background-color',
		displayName: "Menu's background color",
		description: "Menu's background color.",
		defaultValue: '#363A33',
		selector: '.menuItemsContainer:hover',
	},
	{
		name: 'menuTextColor',
		cssProperty: 'color',
		displayName: "Menu's text color",
		description: "Menu's text color.",
		defaultValue: '#DCDCDC',
		selector: '.menuLink',
	},
	{
		name: 'menuHoverTextColor',
		cssProperty: 'color',
		displayName: "Menu's text color on hover",
		description: "Menu's text color on hover.",
		selector: '.menu:hover > .menuLink',
	},
	{
		name: 'menuHoverTextColorWhenActive',
		cssProperty: 'color',
		displayName: "Menu's text color on hover when active",
		description: "Menu's text color on hover when active.",
		selector: '.menu:hover > .menuLink > .menuText',
	},
	{
		name: 'menuTextAndIconGap',
		cssProperty: 'padding-left',
		displayName: 'Text and icon gap',
		description: 'Text and icon gap.',
		defaultValue: '12px',
		selector: '.menuText',
	},
	{
		name: 'menuIconColor',
		cssProperty: 'color',
		displayName: "Menu's icon color",
		description: "Menu's icon color.",
		defaultValue: '#DCDCDC',
		selector: '.icon',
	},
	{
		name: 'menuIconSize',
		cssProperty: 'font-size',
		displayName: "Menu's icon size",
		description: "Menu's icon size.",
		defaultValue: '21px',
		selector: '.icon',
	},
	{
		name: 'menuIconAlignment',
		cssProperty: 'text-align',
		displayName: "Menu's icon alignment",
		description: "Menu's icon alignment",
		defaultValue: 'center',
		selector: '.icon',
	},
	{
		name: 'menuCaretIconColor',
		cssProperty: 'color',
		displayName: "Menu's caret icon color",
		description: "Menu's caret icon color.",
		defaultValue: '#DCDCDC',
		selector: '.menuCaretIcon',
	},
	{
		name: 'menuCaretIconColorWhenActive',
		cssProperty: 'color',
		displayName: "Menu's caret icon color",
		description: "Menu's caret icon color.",
		selector: '.menuItemsContainer.isActive .menuCaretIcon',
	},
	{
		name: 'menuSize',
		cssProperty: 'font-size',
		displayName: "Menu's size",
		description: "Menu's font size applied to icons and text.",
		defaultValue: '16px',
		selector: '.menu',
	},
	{
		name: 'menuActiveColor',
		cssProperty: 'color',
		displayName: "Menu's Active color",
		description: "Menu's color when the menu is activated.",
		selector: '.menuItemsContainer.isActive .menuText, .menuItemsContainer.isActive .icon',
	},
	{
		name: 'menuActiveBgColor',
		cssProperty: 'background-color',
		displayName: "Menu's Active background color",
		description: "Menu's background color when the menu is activated.",
		defaultValue: '#FCF6E7',
		selector: '.menuItemsContainer.isActive .menuText',
	},
	{
		name: 'menuPadding',
		cssProperty: 'padding',
		displayName: "Menu's padding",
		description: "Menu's Padding.",
		defaultValue: '0 36px',
		selector: '.menu',
	},
	{
		name: 'menuOnlyIconPadding',
		cssProperty: 'padding',
		displayName: "Menu's Only Icon padding",
		description: "Menu's Padding when only icon.",
		defaultValue: '0 20px',
		selector: '.menu',
	},
	{
		name: 'menuActiveBackground',
		cssProperty: 'background-color',
		displayName: "Menu's background color when active",
		description: "Menu's background color when active.",
		defaultValue: '#363A33',
		selector: '.menuItemsContainer.isActive .menu',
	},
	{
		name: 'menuHighlightFontWeightOnHover',
		cssProperty: 'font-weight',
		displayName: "Menu's Highlight font weight on hover",
		description: "Menu's highlight font weight when active on hover.",
		selector: '.menuItemsContainer:hover .menu',
	},
	{
		name: 'menuHighlightLeftBorderOnHover',
		cssProperty: 'border-left',
		displayName: "Menu's Highlight border on hover",
		description: "Menu's highlight border when active on hover.",
		defaultValue: '7px solid #E4B022',
		selector: '.menuItemsContainer:hover .menu',
	},
	{
		name: 'menuHighlightRightBorderOnHover',
		cssProperty: 'border-right',
		displayName: "Menu's Highlight border on hover",
		description: "Menu's highlight border when active on hover.",
		selector: '.menuItemsContainer:hover .menu',
	},
	{
		name: 'menuHighlightTopBorderOnHover',
		cssProperty: 'border-top',
		displayName: "Menu's Highlight border on hover",
		description: "Menu's highlight border when active on hover.",
		selector: '.menuItemsContainer:hover .menu',
	},
	{
		name: 'menuHighlightBottomBorderOnHover',
		cssProperty: 'border-bottom',
		displayName: "Menu's Highlight border on hover",
		description: "Menu's highlight border when active on hover.",
		selector: '.menuItemsContainer:hover .menu',
	},
	{
		name: 'menuWithoutHighlightBorderLeft',
		cssProperty: 'border-left',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		defaultValue: '7px solid transparent',
		selector: '.menu',
	},
	{
		name: 'menuWithoutHighlightBorderRight',
		cssProperty: 'border-right',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		selector: '.menu',
	},
	{
		name: 'menuWithoutHighlightBorderTop',
		cssProperty: 'border-top',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		selector: '.menu',
	},
	{
		name: 'menuWithoutHighlightBorderBottom',
		cssProperty: 'border-bottom',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		selector: '.menu',
	},
	{
		name: 'menuHighlightBorderLeft',
		cssProperty: 'border-left',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		defaultValue: '7px solid #E4B022',
		selector: '.menuItemsContainer.isActive .menu',
	},
	{
		name: 'menuHighlightBorderRight',
		cssProperty: 'border-right',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		selector: '.menu',
	},
	{
		name: 'menuHighlightBorderTop',
		cssProperty: 'border-top',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		selector: '.menu',
	},
	{
		name: 'menuHighlightBorderBottom',
		cssProperty: 'border-bottom',
		displayName: "Menu's Highlight border",
		description: "Menu's highlight border when active.",
		selector: '.menu',
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
// #e5b122
