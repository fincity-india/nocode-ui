import { StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	// Design 1
	{
		groupName: 'Design1',
		displayName: 'Background Of Progress Bar',
		name: 'progressBarBackgroundOne',
		defaultValue: '<fontColorNine>',
		description: 'Background Color For Progress bar',
		cssProperty: 'background-color',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Height Of Progress Bar',
		name: 'progressBarHeightOne',
		defaultValue: '35px',
		description: 'Height of Progress bar',
		cssProperty: 'height',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Border Radius Of Progress Bar',
		name: 'progressBarBorderRadiusOne',
		defaultValue: '100px',
		description: 'Border Radius of Progress bar',
		cssProperty: 'border-radius',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar',
		noPrefix: true,
	},

	{
		groupName: 'Design1',
		displayName: 'Background Of Current Progress',
		name: 'currentProgressBackgroundOne',
		defaultValue: '<backgroundColorGradientEight>',
		description: 'Background Color for Current Progress',
		cssProperty: 'background',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._currentProgress',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Border Radius Of Current Progress',
		name: 'currentProgressBorderRadiusOne',
		defaultValue: '100px',
		description: 'Border Radius of Current Progress',
		cssProperty: 'border-radius',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._currentProgress',
		noPrefix: true,
	},

	{
		groupName: 'Design1',
		displayName: 'Gap of Label and Value Container',
		name: 'labelAndValueContainerGapOne',
		defaultValue: '5px',
		description: 'Gap of Label and Value Container',
		cssProperty: 'gap',
		selector:
			'.comp.compProgressBar._progressBarDesignOne ._progressBar ._labelAndValueContainer',
		noPrefix: true,
	},

	{
		groupName: 'Design1',
		displayName: 'Color of Progress Label',
		name: 'progressLabelColorOne',
		defaultValue: '<fontColorFifteen>',
		description: 'Color of Progress Label',
		cssProperty: 'color',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressLabel',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Family of Progress Label',
		name: 'progressLabelFontFamilyOne',
		defaultValue: '<quaternaryFontFamily>',
		description: 'Font Family of Progress Label',
		cssProperty: 'font-family',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressLabel',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Size of Progress Label',
		name: 'progressLabelFontSizeOne',
		defaultValue: '<quaternaryFontSize>',
		description: 'Font Size of Progress Label',
		cssProperty: 'font-size',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressLabel',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Style of Progress Label',
		name: 'progressLabelFontStyleOne',
		defaultValue: '<primaryFontStyle>',
		description: 'Font Style of Progress Label',
		cssProperty: 'font-style',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressLabel',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Weight of Progress Label',
		name: 'progressLabelFontWeightOne',
		defaultValue: '<primaryFontWeight>',
		description: 'Font Weight of Progress Label',
		cssProperty: 'font-weight',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressLabel',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Line Height of Progress Label',
		name: 'progressLabelLineHeightOne',
		defaultValue: '<senaryFontLineHeight>',
		description: 'Line Height of Progress Label',
		cssProperty: 'line-height',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressLabel',
		noPrefix: true,
	},

	{
		groupName: 'Design1',
		displayName: 'Color of Progress Value',
		name: 'progressValueColorOne',
		defaultValue: '<fontColorFifteen>',
		description: 'Color of Progress Value',
		cssProperty: 'color',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressValue',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Family of Progress Value',
		name: 'progressValueFontFamilyOne',
		defaultValue: '<quaternaryFontFamily>',
		description: 'Font Famliy of Progress Value',
		cssProperty: 'font-family',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressValue',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Size of Progress Value',
		name: 'progressValueFontSizeOne',
		defaultValue: '<tertiaryFontSize>',
		description: 'Font Size of Progress Value',
		cssProperty: 'font-size',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressValue',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Style of Progress Value',
		name: 'progressValueFontStyleOne',
		defaultValue: '<primaryFontStyle>',
		description: 'Font Style of Progress Value',
		cssProperty: 'font-style',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressValue',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Font Weight of Progress Value',
		name: 'progressValueFontWeightOne',
		defaultValue: '<extraBoldFontWeight>',
		description: 'Font Weight of Progress Value',
		cssProperty: 'font-weight',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressValue',
		noPrefix: true,
	},
	{
		groupName: 'Design1',
		displayName: 'Line Height of Progress Value',
		name: 'progressValueLineHeightOne',
		defaultValue: '<senaryFontLineHeight>',
		description: 'Line Height of Progress Value',
		cssProperty: 'line-height',
		selector: '.comp.compProgressBar._progressBarDesignOne ._progressBar ._progressValue',
		noPrefix: true,
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
