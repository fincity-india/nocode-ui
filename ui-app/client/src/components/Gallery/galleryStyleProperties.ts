import { StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		name: 'galleryBackgroundColor',
		cssProperty: 'background-color',
		displayName: 'Gallery background color',
		description: 'The background color of Gallery.',
		defaultValue: 'rgb(24 24 27 / 80%)',
		selector: ' ',
	},
	{
		name: 'backdropFilter',
		displayName: 'backdrop filter',
		description: 'The backdrop filter of the Modal.',
		defaultValue: '1px',
	},
	{
		name: 'previewBackgroundColor',
		cssProperty: 'background-color',
		displayName: 'Preview background color',
		description: 'The background color of Preview.',
		defaultValue: '<lightFontColor>',
		selector: '._previewContainer',
	},
	{
		name: 'previewListGap',
		cssProperty: 'gap',
		displayName: 'Preview list Gap',
		description: 'The gap between preview list images.',
		defaultValue: '8px',
		selector: '._previewList',
	},
	{
		name: 'previewListMarginWhenRightOrLeft',
		cssProperty: 'margin',
		displayName: 'Preview List Margin when position Right or Left',
		description: 'The margin of preview list when position is Right or Left.',
		defaultValue: '22px 12px',
		selector: '._previewList',
	},
	{
		name: 'previewListMarginWhenBottom',
		cssProperty: 'margin',
		displayName: 'Preview List Margin when position Bottom',
		description: 'The margin of preview list when position Bottom.',
		defaultValue: '-22px auto 16px',
		selector: '._previewList._Bottom',
	},
	{
		name: 'previewListMarginWhenTop',
		cssProperty: 'margin',
		displayName: 'Preview List Margin when position Top',
		description: 'The margin of preview list when position Top.',
		defaultValue: '-22px auto 16px',
		selector: '._previewList._Top',
	},
	{
		name: 'previewImageDivWidthWhenRightOrLeft',
		cssProperty: 'width',
		displayName: 'Preview Image Div Width when position Right or Left',
		description: 'The width of preview Image Div when position Right or Left.',
		defaultValue: '80px',
		selector: '._previewImageDiv',
	},
	{
		name: 'previewImageDivHeightWhenRightOrLeft',
		cssProperty: 'height',
		displayName: 'Preview Image Div Height when position Right or Left',
		description: 'The Height of preview Image div when position Right or Left.',
		defaultValue: '100px',
		selector: '._previewImageDiv',
	},
	{
		name: 'previewImageDivBorder',
		cssProperty: 'border',
		displayName: 'Preview Image Div Border',
		description: 'The Border of preview Image Div.',
		defaultValue: '2px solid grey',
		selector: '._previewImageDiv',
	},
	{
		name: 'previewImageDivBorderWhenSelected',
		cssProperty: 'border',
		displayName: 'Preview Image Div Border When Selected',
		description: 'The Border of preview Image Div When Selected.',
		defaultValue: '2px solid blue',
		selector: '._previewImageDiv._selected',
	},
	{
		name: 'previewImageDivBorderRadius',
		cssProperty: 'border-radius',
		displayName: 'Preview Image Div Border Radius',
		description: 'The border radius of preview Image Div.',
		defaultValue: '4px',
		selector: '._previewImageDiv',
	},
	{
		name: 'previewImageDivWidthWhenTop',
		cssProperty: 'width',
		displayName: 'Preview Image Div Width when position Top',
		description: 'The width of preview Image Div when position Top.',
		defaultValue: '100px',
		selector: '._previewImageDiv._Top',
	},
	{
		name: 'previewImageDivHeightWhenTop',
		cssProperty: 'height',
		displayName: 'Preview Image Div Height when position Top',
		description: 'The Height of preview Image Div when position Top.',
		defaultValue: '80px',
		selector: '._previewImageDiv._Top',
	},
	{
		name: 'previewImageDivWidthWhenBottom',
		cssProperty: 'width',
		displayName: 'Preview Image Div Width when position Bottom',
		description: 'The width of preview Image Div when position Bottom.',
		defaultValue: '100px',
		selector: '._previewImageDiv._Bottom',
	},
	{
		name: 'previewImageDivHeightWhenBottom',
		cssProperty: 'height',
		displayName: 'Preview Image Div Height when position Bottom',
		description: 'The Height of preview Image Div when position Bottom.',
		defaultValue: '80px',
		selector: '._previewImageDiv._Bottom',
	},
	{
		name: 'previewImageBorderRadius',
		cssProperty: 'border-radius',
		displayName: 'Preview Image Border Radius',
		description: 'The border of preview Image.',
		defaultValue: '3px',
		selector: '._previewImage',
	},
	{
		name: 'previewImageObjectFit',
		cssProperty: 'object-fit',
		displayName: 'Preview Image Border Radius',
		description: 'The border of preview Image.',
		defaultValue: 'cover',
		selector: '._previewImage',
	},
	{
		name: 'previewCloseIconMargin',
		cssProperty: 'margin',
		displayName: 'Preview Image Border Radius',
		description: 'The border of preview Image.',
		defaultValue: '10px 14px;',
		selector: '._previewCloseIcon',
	},
	{
		name: 'previewCloseIconFontSize',
		cssProperty: 'font-size',
		displayName: 'Preview Image Border Radius',
		description: 'The border of preview Image.',
		defaultValue: '24px;',
		selector: '._previewCloseIcon i',
	},
	{
		name: 'galleryToolbarRightColumnGap',
		cssProperty: 'gap',
		displayName: 'Gallery Toolbar Right Column Gap',
		description: 'The gap between items of gallery Toolbar Right Column.',
		defaultValue: '20px',
		selector: '._galleryToolbar ._rightColumn',
	},
	{
		name: 'galleryToolbarRightColumnPadding',
		cssProperty: 'padding',
		displayName: 'Gallery Toolbar Right Column Padding',
		description: 'The padding of gallery Toolbar Right Column.',
		defaultValue: '10px 12px',
		selector: '._galleryToolbar ._rightColumn',
	},
	{
		name: 'galleryToolbarRightColumnBackgroundColor',
		cssProperty: 'background-color',
		displayName: 'Gallery Toolbar Right Column Background Color',
		description: 'The Background Color of gallery Toolbar Right Column.',
		defaultValue: 'rgb(24 24 27 / 50%)',
		selector: '._galleryToolbar ._rightColumn',
	},
	{
		name: 'galleryToolbarRightColumnIconColor',
		cssProperty: 'color',
		displayName: 'Gallery Toolbar Right Column Color',
		description: 'The Color of gallery Toolbar Right Column.',
		defaultValue: '<lightFontColor>',
		selector: '._galleryToolbar ._rightColumn i',
	},
	{
		name: 'galleryToolbarRightColumnIconWidth',
		cssProperty: 'width',
		displayName: 'Gallery Toolbar Right Column Width',
		description: 'The widht of gallery Toolbar Right Column.',
		defaultValue: '24px',
		selector: '._galleryToolbar ._rightColumn i',
	},
	{
		name: 'galleryToolbarRightColumnIconFontSize',
		cssProperty: 'font-size',
		displayName: 'Gallery Toolbar Right Column Font Size',
		description: 'The Font Size of gallery Toolbar Right Column.',
		defaultValue: '24px',
		selector: '._galleryToolbar ._rightColumn i',
	},
	{
		name: 'galleryToolbarLeftColumnColor',
		cssProperty: 'color',
		displayName: 'Gallery Toolbar Left Column Color',
		description: 'The Color of gallery Toolbar Left Column.',
		defaultValue: '<lightFontColor>',
		selector: '._galleryToolbar ._leftColumn',
	},
	{
		name: 'galleryToolbarLeftColumnMargin',
		cssProperty: 'margin',
		displayName: 'Gallery Toolbar Left Column Width',
		description: 'The widht of gallery Toolbar Left Column.',
		defaultValue: '0 12px',
		selector: '._galleryToolbar ._leftColumn',
	},
	{
		name: 'galleryToolbarLeftColumnFontSize',
		cssProperty: 'font-size',
		displayName: 'Gallery Toolbar Right Column Font Size',
		description: 'The Font Size of gallery Toolbar Right Column.',
		defaultValue: '18px',
		selector: '._galleryToolbar ._leftColumn',
	},
	{
		name: 'thumbnailContainerGap',
		cssProperty: 'gap',
		displayName: 'Thumbnail Container Gap',
		description: 'The Gap between items in Thumbnail Container.',
		defaultValue: '8px',
		selector: '._thumbnailContainer',
	},
	{
		name: 'thumbnailContainerMaxHeightWhenTopOrBottom',
		cssProperty: 'max-height',
		displayName: 'Thumbnail Container Max Height when position Top or Bottom',
		description: 'The Max Height of Thumbnail Container when position Top or Bottom.',
		defaultValue: '90px',
		selector: '._thumbnailContainer',
	},
	{
		name: 'thumbnailContainerwidthWhenTopOrBottom',
		cssProperty: 'width',
		displayName: 'Thumbnail Container Width when position Top or Bottom',
		description: 'The Width of Thumbnail Container when position Top or Bottom.',
		defaultValue: '80%',
		selector: '._thumbnailContainer',
	},
	{
		name: 'thumbnailContainerMarginWhenBottom',
		cssProperty: 'margin',
		displayName: 'Thumbnail Container Margin when position Bottom',
		description: 'The Margin of Thumbnail Container when position Bottom.',
		defaultValue: '8px auto',
		selector: '._thumbnailContainer',
	},
	{
		name: 'thumbnailContainerMarginWhenTop',
		cssProperty: 'margin',
		displayName: 'Thumbnail Container Margin when position Top',
		description: 'The Margin of Thumbnail Container when position Top.',
		defaultValue: '50px auto 8px auto',
		selector: '._thumbnailContainer._thumbnailTop',
	},
	{
		name: 'thumbnailContainerMarginWhenRight',
		cssProperty: 'margin',
		displayName: 'Thumbnail Container Margin when position Right',
		description: 'The Margin of Thumbnail Container when position Right.',
		defaultValue: '0 10px;',
		selector: '._thumbnailContainer._thumbnailRight',
	},
	{
		name: 'thumbnailContainerMarginWhenLeft',
		cssProperty: 'margin',
		displayName: 'Thumbnail Container Margin when position Left',
		description: 'The Margin of Thumbnail Container when position Left.',
		defaultValue: '0 10px',
		selector: '._thumbnailContainer._thumbnailLeft',
	},
	{
		name: 'thumbnailContainerHeightWhenRight',
		cssProperty: 'height',
		displayName: 'Thumbnail Container Height when position Right',
		description: 'The Height of Thumbnail Container when position Right.',
		defaultValue: '80%',
		selector: '._thumbnailContainer._thumbnailRight',
	},
	{
		name: 'thumbnailContainerHeightWhenLeft',
		cssProperty: 'height',
		displayName: 'Thumbnail Container Height when position Left',
		description: 'The Height of Thumbnail Container when position Left.',
		defaultValue: '80%',
		selector: '._thumbnailContainer._thumbnailLeft',
	},
	{
		name: 'thumbnailContainerMaxWidthWhenRight',
		cssProperty: 'max-width',
		displayName: 'Thumbnail Container Max Width when position Right',
		description: 'The Max Width of Thumbnail Container when position Right.',
		defaultValue: '140px',
		selector: '._thumbnailContainer._thumbnailRight',
	},
	{
		name: 'thumbnailContainerMaxWidthWhenLeft',
		cssProperty: 'max-width',
		displayName: 'Thumbnail Container Max Width when position Left',
		description: 'The Max Width of Thumbnail Container when position Left.',
		defaultValue: '140px',
		selector: '._thumbnailContainer._thumbnailLeft',
	},
	{
		name: 'thumbnailImageDivHeight',
		cssProperty: 'height',
		displayName: 'Thumbnail Image Div Height',
		description: 'The Height of Thumbnail Image Div.',
		defaultValue: '80px',
		selector: '._thumbnailImageDiv',
	},
	{
		name: 'thumbnailImageDivWidth',
		cssProperty: 'width',
		displayName: 'Thumbnail Image Div Width',
		description: 'The Width of Thumbnail Image Div.',
		defaultValue: '120px',
		selector: '._thumbnailImageDiv',
	},
	{
		name: 'thumbnailImageDivBorder',
		cssProperty: 'border',
		displayName: 'Thumbnail Image Div Border',
		description: 'The Border of Thumbnail Image Div.',
		defaultValue: '1px solid grey',
		selector: '._thumbnailImageDiv',
	},
	{
		name: 'thumbnailImageDivBorderRadius',
		cssProperty: 'border-radius',
		displayName: 'Thumbnail Image Div Border Radius',
		description: 'The Border Radius of Thumbnail Image Div.',
		defaultValue: '4px',
		selector: '._thumbnailImageDiv',
	},
	{
		name: 'thumbnailImageBorderRadius',
		cssProperty: 'border-radius',
		displayName: 'Thumbnail Image Border Radius',
		description: 'The border of Thumbnail Image.',
		defaultValue: '3px',
		selector: '._thumbnailImage',
	},
	{
		name: 'thumbnailImageObjectFit',
		cssProperty: 'object-fit',
		displayName: 'Thumbnail Image Border Radius',
		description: 'The border of Thumbnail Image.',
		defaultValue: 'cover',
		selector: '._thumbnailImage',
	},
	{
		name: 'slideImageObjectFit',
		cssProperty: 'object-fit',
		displayName: 'Slide Image Border Radius',
		description: 'The border of Slide Image.',
		defaultValue: 'cover',
		selector: '._slideImage',
	},
	{
		name: 'arrowButtonContainerPadding',
		cssProperty: 'padding',
		displayName: 'Arrow Button Container Padding',
		description: 'The padding of Arrow Button Container.',
		defaultValue: '0 10px',
		selector: '._arrowButtonsContainer',
	},
	{
		name: 'arrowButtonColor',
		cssProperty: 'color',
		displayName: 'Arrow Button Container Color',
		description: 'The Color of Arrow Button.',
		defaultValue: '<lightFontColor>',
		selector: '._button',
	},
	{
		name: 'arrowButtonFontSize',
		cssProperty: 'font-size',
		displayName: 'Arrow Button Container Font Size',
		description: 'The Font Size of Arrow Button.',
		defaultValue: '50px',
		selector: '._button',
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
