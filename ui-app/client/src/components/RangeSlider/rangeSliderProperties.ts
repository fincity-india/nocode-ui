import { Schema } from '@fincity/kirun-js';
import {
	SCHEMA_ANY_COMP_PROP,
	SCHEMA_BOOL_COMP_PROP,
	SCHEMA_NUM_COMP_PROP,
	SCHEMA_STRING_COMP_PROP,
	SCHEMA_VALIDATION,
} from '../../constants';
import {
	ComponentPropertyDefinition,
	ComponentPropertyEditor,
	ComponentPropertyGroup,
	ComponentStylePropertyDefinition,
} from '../../types/common';
import { COMMON_COMPONENT_PROPERTIES, COMPONENT_STYLE_GROUP_PROPERTIES } from '../util/properties';

const propertiesDefinition: Array<ComponentPropertyDefinition> = [
	{
		name: 'rangeSliderDesignType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'RangeSlider Design Selection Type',
		description: 'Type of the selection of a RangeSlider',
		defaultValue: '_default',
		group: ComponentPropertyGroup.BASIC,
		enumValues: [
			{
				name: '_default',
				displayName: 'RangeSlider Default Design',
				description: 'RangeSlider Default Design.',
			},
			{
				name: '_flatThumb',
				displayName: 'RangeSlider flat thumb Design',
				description: 'RangeSlider flat thumb Design',
			},
			{
				name: '_squareThumb',
				displayName: 'RangeSlider square thumb Design',
				description: 'RangeSlider square thumb Design',
			},
			{
				name: '_largeToolTip',
				displayName: 'RangeSlider large tool tip Design',
				description: 'RangeSlider large tool tip Design',
			},
			{
				name: '_smallToolTip',
				displayName: 'RangeSlider small tool tip Design',
				description: 'RangeSlider small tool tip Design',
			},
			{
				name: '_squareToolTip',
				displayName: 'RangeSlider square tool tip Design',
				description: 'RangeSlider square tool tip Design',
			},
			{
				name: '_roundThumb',
				displayName: 'RangeSlider round thumb Design',
				description: 'RangeSlider round thumb Design',
			},
		],
	},
	{
		name: 'rangeSliderColorScheme',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'RangeSlider Color Scheme',
		description: 'Type of the color scheme for RangeSlider',
		defaultValue: '_primary',
		group: ComponentPropertyGroup.BASIC,
		enumValues: [
			{
				name: '_primary',
				displayName: 'Primary Color Scheme',
				description: 'Default Color Scheme',
			},
			{
				name: '_secondary',
				displayName: 'Secondary Color Scheme',
				description: 'Secondary Color Scheme',
			},
			{
				name: '_tertiary',
				displayName: 'Tertiary Color Scheme',
				description: 'Tertiary Color Scheme',
			},
			{
				name: '_quaternary',
				displayName: 'Quaternary Color Scheme',
				description: 'Quaternary Color Scheme',
			},
			{
				name: '_quinary',
				displayName: 'Quinary Color Scheme',
				description: 'Quinary Color Scheme',
			},
		],
	},
	{
		name: 'rangeSliderType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Range Slider Type',
		description: 'Choose the design of the range slider',
		defaultValue: '_linear',
		group: ComponentPropertyGroup.BASIC,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: '_linear', displayName: 'Linear' },
			{ name: '_circular', displayName: 'Circular' },
		],
	},
	{
		name: 'storingDataType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Storing Value Type',
		description: 'Choose the value you want to store in storage',
		defaultValue: 'Value',
		group: ComponentPropertyGroup.DATA,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'Value', displayName: 'VALUE' },
			{ name: 'Percent', displayName: 'PERCENT' },
		],
	},
	{
		name: 'min',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Minimum Value',
		description: 'Min attribute Value.',
		defaultValue: 0,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'minTooltipDisplay',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Min Label Value Display',
		description: 'Choose what to display in the tooltip for min value',
		defaultValue: 'VALUE',
		group: ComponentPropertyGroup.DATA,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'NONE', displayName: 'None' },
			{ name: 'VALUE', displayName: 'Value' },
			{ name: 'PERCENTAGE', displayName: 'Percentage' },
		],
	},
	{
		name: 'minValueLabelPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Minimum Label Value Position',
		description:
			'By selecting the minimum value label is positioned based on the value selected',
		defaultValue: 'top',
		group: ComponentPropertyGroup.DATA,
		enumValues: [
			{
				name: 'top',
				displayName: 'TOP',
				description: 'Minimum value label positioned to Top',
			},
			{
				name: 'bottom',
				displayName: 'BOTTOM',
				description: 'Minimum value label positioned to Bottom',
			},
		],
	},
	{
		name: 'max',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Maximum Value',
		description: 'Max attribute  Value.',
		defaultValue: 100,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'maxTooltipDisplay',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Max Label Value Display',
		description: 'Choose what to display in the tooltip for max value',
		defaultValue: 'VALUE',
		group: ComponentPropertyGroup.DATA,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'NONE', displayName: 'None' },
			{ name: 'VALUE', displayName: 'Value' },
			{ name: 'PERCENTAGE', displayName: 'Percentage' },
		],
	},
	{
		name: 'maxValueLabelPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Maximum Label Value Position',
		description:
			'By selecting the maximum value label is positioned based on the value selected',
		defaultValue: 'top',
		group: ComponentPropertyGroup.DATA,
		enumValues: [
			{
				name: 'top',
				displayName: 'TOP',
				description: 'Maximum value label positioned to Top',
			},
			{
				name: 'bottom',
				displayName: 'BOTTOM',
				description: 'Maximum value label positioned to Bottom',
			},
		],
	},
	{
		name: 'step',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Step Value',
		description: 'Step attribute Value.',
		defaultValue: 1,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'tooltipDisplay',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tooltip Display',
		description: 'Choose what to display in the tooltip',
		defaultValue: 'PERCENTAGE',
		group: ComponentPropertyGroup.DATA,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'NONE', displayName: 'None' },
			{ name: 'VALUE', displayName: 'Value' },
			{ name: 'PERCENTAGE', displayName: 'Percentage' },
		],
	},
	{
		name: 'toolTipPosition',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'ToolTip Position',
		description: 'By selecting the value tooltip is positioned based on the value selected',
		defaultValue: 'top',
		group: ComponentPropertyGroup.DATA,
		enumValues: [
			{ name: 'top', displayName: 'TOP', description: 'ToolTip positioned to Top' },
			{ name: 'bottom', displayName: 'BOTTOM', description: 'ToolTip positioned to Bottom' },
			{ name: 'left', displayName: 'LEFT', description: 'ToolTip positioned to Left' },
			{ name: 'right', displayName: 'RIGHT', description: 'ToolTip positioned to Right' },
		],
	},
	{
		name: 'circularRangeSliderIndicatorWidth',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Circular Range Slider Indicator Width',
		description: 'Width of the circular range slider indicator',
		defaultValue: 2.5,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'circularRangeSliderRadius',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Circular Range Slider Radius',
		description: 'Radius of the circular range Slider radius ',
		defaultValue: 45,
		group: ComponentPropertyGroup.DATA,
	},
	{
		name: 'startPoint',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Start angle from',
		description: 'Whether to show the ticks on the top or bottom of the slider',
		defaultValue: 'left',
		group: ComponentPropertyGroup.DATA,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'top', displayName: 'TOP' },
			{ name: 'left', displayName: 'LEFT' },
			{ name: 'bottom', displayName: 'BOTTOM' },
			{ name: 'right', displayName: 'RIGHT' },
		],
	},
	{
		name: 'decimalPrecision',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Percentage Decimal Precision',
		description:
			'By selecting the value below will display the number of decimal places in percentage upto 10 ',
		defaultValue: '0',
		group: ComponentPropertyGroup.ADVANCED,
		enumValues: [
			{ name: '0', displayName: '0' },
			{ name: '1', displayName: '1' },
			{ name: '2', displayName: '2' },
			{ name: '3', displayName: '3' },
			{ name: '4', displayName: '4' },
			{ name: '5', displayName: '5' },
			{ name: '6', displayName: '6' },
			{ name: '7', displayName: '7' },
			{ name: '8', displayName: '8' },
			{ name: '9', displayName: '9' },
			{ name: '10', displayName: '10' },
		],
	},
	{
		name: 'showMarks',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Show Marks',
		description: 'Whether to show the marks on the slider',
		defaultValue: true,
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'updateStoreImmediately',
		schema: SCHEMA_BOOL_COMP_PROP,
		displayName: 'Update Store Immediately',
		description: 'Whether to update store Immediately or not.',
		defaultValue: true,
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'marksType',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Mark Type',
		description: 'Data type show the marks on the slider',
		defaultValue: 'Percent',
		group: ComponentPropertyGroup.ADVANCED,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'None', displayName: 'None' },
			{ name: 'Value', displayName: 'Value' },
			{ name: 'Percent', displayName: 'Percent' },
		],
	},
	{
		name: 'marksValue',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'Enter Mark Value',
		description: 'Enter the value at which you need a marker to be displayed',
		defaultValue: [],
		group: ComponentPropertyGroup.ADVANCED,
		multiValued: true,
	},
	{
		name: 'showticks',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Show Ticks',
		description: 'Whether to show the ticks on the slider',
		defaultValue: 'Always',
		group: ComponentPropertyGroup.ADVANCED,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'Never', displayName: 'Never' },
			{ name: 'OnHover', displayName: 'OnHover' },
			{ name: 'Always', displayName: 'Always' },
		],
	},
	{
		name: 'tickcounts',
		schema: SCHEMA_NUM_COMP_PROP,
		displayName: 'No of ticks',
		description: 'This shows the ticks on the slider',
		defaultValue: 2,
		group: ComponentPropertyGroup.ADVANCED,
	},
	{
		name: 'tickslabelvalue',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tick Label Value',
		description: 'Whether to show the ticks on the slider',
		defaultValue: 'Percent',
		group: ComponentPropertyGroup.ADVANCED,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'None', displayName: 'None' },
			{ name: 'Value', displayName: 'Value' },
			{ name: 'Percent', displayName: 'Percent' },
		],
	},
	{
		name: 'tickslabelposition',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'Tick Label Position',
		description: 'Whether to show the ticks on the top or bottom of the slider',
		defaultValue: 'bottom',
		group: ComponentPropertyGroup.ADVANCED,
		editor: ComponentPropertyEditor.ENUM,
		enumValues: [
			{ name: 'top', displayName: 'TOP' },
			{ name: 'bottom', displayName: 'BOTTOM' },
		],
	},
	{
		name: 'onThumbMove',
		schema: SCHEMA_STRING_COMP_PROP,
		displayName: 'On Thumb Movement Event',
		editor: ComponentPropertyEditor.EVENT_SELECTOR,
		description: 'Event to be triggered when thumb moved.',
		group: ComponentPropertyGroup.EVENTS,
	},

	COMMON_COMPONENT_PROPERTIES.readOnly,
	COMMON_COMPONENT_PROPERTIES.visibility,
];

const stylePropertiesDefinition: ComponentStylePropertyDefinition = {
	'': [
		COMPONENT_STYLE_GROUP_PROPERTIES.layout.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.position.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.effects.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	rangeTrack: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	thumb: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	filledTrack: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	toolTip: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	minValueLabel: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	maxValueLabel: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	circularTrack: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	circularThumb: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	circularProgress: [
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	circularText: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
	],
	marks: [
		COMPONENT_STYLE_GROUP_PROPERTIES.size.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	
	tickLables: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
	tick: [
		COMPONENT_STYLE_GROUP_PROPERTIES.typography.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.spacing.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.border.type,
		COMPONENT_STYLE_GROUP_PROPERTIES.background.type,
	],
};

export { propertiesDefinition, stylePropertiesDefinition };