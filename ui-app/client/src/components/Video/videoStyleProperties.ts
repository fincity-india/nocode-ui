import { StyleGroupDefinition, StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		name: 'videControlsPadding',
		displayName: 'Controls padding',
		description: 'Padding of the video controls.',
		cssProperty: 'padding',
		defaultValue: '0px 10px 5px 5px',
		selector: '.videoControlsContainer',
	},
	{
		name: 'videoControlsContainerGap',
		displayName: 'Controls gap',
		description: 'Gap between the video controls and the video.',
		cssProperty: 'gap',
		defaultValue: '8px;',
		selector: '.videoControlsContainer',
	},
	{
		name: 'playPauseIconColor',
		displayName: 'playPause icon color',
		description: 'Color of the play pause icon.',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.playBackIcon',
	},
	{
		name: 'playPauseIconFontSize',
		displayName: 'playPause icon font size',
		description: 'font size of the play pause icon.',
		cssProperty: 'font-size',
		defaultValue: '32px',
		selector: '.playBackIcon',
	},
	{
		name: 'playPauseIconWidth',
		displayName: 'playPause icon width',
		description: 'width of the play pause icon.',
		cssProperty: 'width',
		defaultValue: '50px',
		selector: '.playBackIcon',
	},
	{
		name: 'playPauseIconWidth',
		displayName: 'playPause icon width',
		description: 'width of the play pause icon.',
		cssProperty: 'width',
		defaultValue: '50px',
		selector: '.playBackIcon',
	},
	{
		name: 'rangeSliderAccentColor',
		displayName: 'range slider accent color',
		description: 'Accent color of the range slider.',
		cssProperty: 'accent-color',
		defaultValue: '#ff0000',
		selector: 'input[type="range"]',
	},
	{
		name: 'rangeSliderHeight',
		displayName: 'range slider height',
		description: 'Height of the range slider.',
		cssProperty: 'height',
		defaultValue: '2px',
		selector: 'input[type="range"]',
	},
	{
		name: 'volumeIconColor',
		displayName: 'volume icon color',
		description: ' color of volume button.',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.volumeButton',
	},
	{
		name: 'toolTipColor',
		displayName: 'toolTip color',
		description: ' color of toolTip.',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.toolTip',
	},
	{
		name: 'durationColor',
		displayName: 'duration color',
		description: ' color of duration.',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.duration',
	},
	{
		name: 'timeElapsedColor',
		displayName: 'time elapsed color',
		description: ' color of time elapsed.',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.timeElapsed',
	},
	{
		name: 'toolTipColor',
		displayName: 'toolTip color',
		description: 'color of toolTip.',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.toolTip',
	},
	{
		name: 'timeSplitterColor',
		displayName: 'time splitter color',
		description: ' color of time splitter .',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.timeSplitter',
	},
	{
		name: 'fullScreenIconColor',
		displayName: 'fullScreen icon color',
		description: 'color of fullScreen icon.',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.fullScreen',
	},
	{
		name: 'pipIconColor',
		displayName: 'pip Icon color',
		description: ' color of pip icon .',
		cssProperty: 'color',
		defaultValue: '#ffffff',
		selector: '.pip',
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
