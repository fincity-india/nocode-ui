import { StyleGroupDefinition, StylePropertyDefinition } from '../../types/common';

export const styleProperties: Array<StylePropertyDefinition> = [
	{
		name: 'supportTextDisabledColor',
		cssProperty: 'color',
		displayName: 'Application/Site Disabled font color',
		description: "This color is used for disabled textbox's support text.",
		defaultValue: '<form-input-text-color-when-disabled>',
		selector: '.supportText.disabled',
	},
	{
		name: 'supportTextFontSize',
		cssProperty: 'font-size',
		displayName: 'textbox support text font size',
		description: "This textbox's font size is used for textbox's support text.",
		selector: '.supportText',
	},
	{
		name: 'supportTextFontColor',
		cssProperty: 'color',
		displayName: 'textbox support text font color',
		description: "This textbox's color is used for textbox's support text.",
		selector: '.supportText',
	},
	{
		name: 'inputTextFontSize',
		cssProperty: 'font-size',
		displayName: 'textbox input text font size',
		description: "This textbox's font size is used for textbox's input text.",
		selector: '.textBoxDiv .inputContainer .textbox',
	},
	{
		name: 'supportTextErrorColor',
		cssProperty: 'color',
		displayName: 'Application/Site Error font color',
		description: "This color is used for error textbox's support text.",
		defaultValue: '<main-error-color>',
		selector: '.supportText.error',
	},
	{
		name: 'textBoxBorderColor',
		cssProperty: 'border',
		displayName: "textbox's border color",
		description: "This color is used for textbox's border color.",
		defaultValue: '1px solid <form-input-border-color>',
		selector: '.textBoxDiv',
	},
	{
		name: 'textBoxWdith',
		cssProperty: 'width',
		displayName: "textbox's width",
		description: "This is for textbox's width",
		selector: '.textBoxDiv',
	},
	{
		name: 'textBoxHeight',
		cssProperty: 'height',
		displayName: "textbox's height",
		description: "This is for textbox's height",
		defaultValue: '56px',
		selector: '.textBoxDiv',
	},
	{
		name: 'textBoxBorderRadius',
		cssProperty: 'border-radius',
		displayName: "textbox's border radius",
		description: "This is for textbox's border radius",
		defaultValue: '4px',
		selector: '.textBoxDiv',
	},
	{
		name: 'textBoxBorderErrorColor',
		cssProperty: 'border',
		displayName: "textbox's border color on error",
		description: "This color is used for textbox's error border color.",
		defaultValue: '1px solid <form-input-border-error-color>',
		selector: '.textBoxDiv.error',
	},
	{
		name: 'textBox left icon self align',
		cssProperty: 'justify-self',
		displayName: "textbox's left icon self align",
		description: "This is for textbox's left icon self align",
		defaultValue: 'center',
		selector: '.textBoxDiv .leftIcon',
	},
	{
		name: 'textBox left icon left padding',
		cssProperty: 'padding-left',
		displayName: "textbox's left icon padding left",
		description: "This is for textbox's left icon left padding",
		defaultValue: '0',
		selector: '.textBoxDiv .leftIcon',
	},
	{
		name: 'textBox right icon self align',
		cssProperty: 'justify-self',
		displayName: "textbox's right icon self align",
		description: "This is for textbox's right icon self align",
		defaultValue: 'center',
		selector: '.textBoxDiv .rightIcon',
	},
	{
		name: 'textBox right icon right padding',
		cssProperty: 'padding-right',
		displayName: "textbox's right icon padding right",
		description: "This is for textbox's right icon right padding",
		defaultValue: '0',
		selector: '.textBoxDiv .rightIcon',
	},
	{
		name: 'textBox right icon content align',
		cssProperty: 'margin',
		displayName: "textbox's right icon padding right",
		description: "This is for textbox's right icon right padding",
		defaultValue: 'auto',
		selector: '.textBoxDiv .rightIcon',
	},
	{
		name: 'textBoxBorderColorOnFocus',
		cssProperty: 'border',
		displayName: "textbox's border color on focus",
		description: "This color is used for textbox's focus border color.",
		defaultValue: '1px solid <form-input-border-color-focussed>',
		selector: '.textBoxDiv.focussed',
	},
	{
		name: 'textBoxBorderColorWhenHasText',
		cssProperty: 'border',
		displayName: "textbox's border color with text",
		description: "This color is used for textbox's border color when it has text.",
		defaultValue: '1px solid <form-input-border-color-with-text>',
		selector: '.textBoxDiv.hasText',
	},
	{
		name: 'textBoxBorderColorWhenDisabled',
		cssProperty: 'border',
		displayName: "textbox's border color when disabled",
		description: "This color is used for textbox's border color when it is disabled.",
		defaultValue: '1px solid <form-input-border-color-when-disabled>',
		selector: '.textBoxDiv.disabled',
	},
	{
		name: 'textBoxLabelTextColor',
		cssProperty: 'color',
		displayName: "textbox's label color",
		description: "This color is used for textbox's label color.",
		defaultValue: '<form-input-text-color>',
		selector: '.textBoxDiv .inputContainer .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextCursorEvent',
		cssProperty: 'cursor',
		displayName: "textbox's label text cursor event",
		description: "This cursor is used for textbox's label text cursor event.",
		defaultValue: 'text',
		selector: '.textBoxDiv .inputContainer .textBoxLabel',
	},
	{
		name: 'textBoxInputContainerHeight',
		cssProperty: 'height',
		displayName: "textbox's input container height",
		description: "This height is used for textbox's input container height.",
		defaultValue: '100%',
		selector: '.textBoxDiv .inputContainer',
	},
	{
		name: 'textBoxInputContainerHeight',
		cssProperty: 'width',
		displayName: "textbox's input container width",
		description: "This width is used for textbox's input container height.",
		selector: '.textBoxDiv .inputContainer',
	},

	{
		name: 'textBoxTextColorWhenDisabled',
		cssProperty: 'color',
		displayName: "textbox's border color when disabled",
		description: "This color is used for textbox's border color when it is disabled.",
		defaultValue: '<form-input-text-color-when-disabled>',
		selector: '.textBoxDiv .inputContainer .textBoxLabel.disabled',
	},
	{
		name: 'textBoxLabelTextPostionFromLeft',
		cssProperty: 'left',
		displayName: "textbox's label position from left when input",
		description: "This left is used for textbox's label position when it has any input.",
		defaultValue: '0px',
		selector: '.textBoxDiv .inputContainer .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextPaddingFromLeft',
		cssProperty: 'padding-left',
		displayName: "textbox's label padding from left when input",
		description: "This left is used for textbox's label padding when it has any input.",
		defaultValue: '5px',
		selector: '.textBoxDiv .inputContainer .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextFromTop',
		cssProperty: 'top',
		displayName: "textbox's label text position from top when input",
		description: "This top is used for textbox's label text position from top when it has any input.",
		defaultValue: '0',
		selector: '.textBoxDiv .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextFromLeft',
		cssProperty: 'left',
		displayName: "textbox's label text position from left when input",
		description: "This left is used for textbox's label text position from top when it has any input.",
		defaultValue: '5px',
		selector: '.textBoxDiv .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextPaddingLeft',
		cssProperty: 'padding-left',
		displayName: "textbox's label text padding from left when input",
		description: "This left is used for textbox's label text padding left when it has any input.",
		defaultValue: '0',
		selector: '.textBoxDiv .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextBackgroundColor',
		cssProperty: 'background-color',
		displayName: "textbox's label text background color when input",
		description: "This background color is used for textbox's label text background color when it has any input.",
		defaultValue: '#fff',
		selector: '.textBoxDiv .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextFromTopWhenContainsIcon',
		cssProperty: 'top',
		displayName: "textbox's label text position from top when input When Contains Icon",
		description: "This top is used for textbox's label text position from top when it has any input when contains Icon.",
		defaultValue: '0',
		selector: '.textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextFromLeftWhenContainsIcon',
		cssProperty: 'left',
		displayName: "textbox's label text position from left when input when contains icon",
		description: "This left is used for textbox's label text position from top when it has any input when contains icon.",
		defaultValue: '0',
		selector: '.textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextPaddingLeftWhenContainsIcon',
		cssProperty: 'padding-left',
		displayName: "textbox's label text padding from left when input when contains icon",
		description: "This left is used for textbox's label text padding left when it has any input when contains icon.",
		defaultValue: '0',
		selector: '.textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextTransformWhenContainsTextBackgroundColorWhenContainsIcon',
		cssProperty: 'background-color',
		displayName: "textbox's label text background color when input when contains icon",
		description: "This background color is used for textbox's label text background color when it has any input when contains icon.",
		defaultValue: '#fff',
		selector: '.textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:focus + .textBoxLabel, .textBoxDiv.textBoxwithIconContainer .inputContainer .textbox:not(:placeholder-shown) + .textBoxLabel',
	},
	{
		name: 'textBoxLabelTextOpacity',
		cssProperty: 'opacity',
		displayName: "textbox's label text opacity",
		description: "This opacity is used for textbox's label content opacity.",
		defaultValue: '0',
		selector: '.textBoxDiv .inputContainer .textbox::placeholder',
	},
	{
		name: 'textBoxContainerContentAlign',
		cssProperty: 'align-items',
		displayName: "textbox's Container Content Align in the grid",
		description: "This align items is used for textbox's conatiner content align.",
		defaultValue: 'center',
		selector: '.textBoxDiv.textBoxContainer',
	},
	{
		name: 'textBoxContainerContentAlign',
		cssProperty: 'align-items',
		displayName: "textbox's Container Content Align in the grid",
		description: "This align items is used for textbox's conatiner content align when contains icons",
		defaultValue: 'center',
		selector: '.textBoxDiv.textBoxwithIconContainer',
	},
	{
		name: 'textBoxLabelTextColorWhenError',
		cssProperty: 'color',
		displayName: "textbox's label color when error",
		description: "This color is used for textbox's label color when it has error.",
		defaultValue: '<form-input-error-color>',
		selector: '.textBoxDiv .inputContainer .textBoxLabel.error',
	},
	{
		name: 'noFloatTextBoxLabelTextColor',
		cssProperty: 'color',
		displayName: "No Float textbox's label color",
		description: "This color is used for textbox's label color.",
		defaultValue: '<form-input-text-color>',
		selector: '.noFloatTextBoxLabel',
	},
	{
		name: 'noFloatTextBoxTextColorWhenDisabled',
		cssProperty: 'color',
		displayName: "No Float textbox's border color when disabled",
		description: "This color is used for textbox's border color when it is disabled.",
		defaultValue: '<form-input-text-color-when-disabled>',
		selector: '.noFloatTextBoxLabel.disabled',
	},
	{
		name: 'noFloatTextBoxLabelTextColorWhenError',
		cssProperty: 'color',
		displayName: "No Float textbox's label color when error",
		description: "This color is used for textbox's label color when it has error.",
		defaultValue: '<form-input-error-color>',
		selector: '.noFloatTextBoxLabel.error',
	},
	{
		name: 'textBoxTextMouseEventWhenDisabled',
		cssProperty: 'cursor',
		displayName: "textbox's mouse cursor when disabled",
		description: "This not allowed mouse event is used for textbox's when it is disabled.",
		defaultValue: '<form-input-mouse-event-when-disabled>',
		selector: '.textBoxDiv .inputContainer .textbox:disabled',
	},
	{
		name: 'textBoxTextBackgroundColorWhenDisabled',
		cssProperty: 'background-color',
		displayName: "textbox's background color when disabled",
		description: "This background color is used for textbox's when it is disabled.",
		defaultValue: 'transparent',
		selector: '.textBoxDiv .inputContainer .textbox:disabled',
	},
	{
		name: 'textBoxLabelBackgroundColorWhenDisabled',
		cssProperty: 'background-color',
		displayName: "textbox's label background color when disabled",
		description: "This background color is used for textbox's label when it is disabled.",
		defaultValue: 'transparent',
		selector: '.textBoxLabel.disabled',
	},
	{
		name: 'textBoxClearTextIconPointerEvent',
		cssProperty: 'cursor',
		displayName: "textbox's clear text icon poiter event",
		description: "This cursor event is used for textbox's clear icon.",
		defaultValue: 'pointer',
		selector: '.textBoxDiv .clearText',
	},
	{
		name: 'textBoxIconColorWhenError',
		cssProperty: 'color',
		displayName: "textbox's Error Icon color when error",
		description: "This color is used for textbox's error icon color when it has error",
		defaultValue: '<form-input-text-color-when-error>',
		selector: '.textBoxDiv .errorIcon',
	},
	{
		name: 'textBoxTextColorWhenDisabled',
		cssProperty: 'color',
		displayName: "textbox's text color when disabled",
		description: "This color is used for textbox's text color when its disabled",
		defaultValue: '<form-input-text-color-when-disabled>',
		selector: '.textBoxDiv .inputContainer .textbox:disabled'
	},
	{
		name: 'textBoxIconColorWhenTextPresent',
		cssProperty: 'color',
		displayName: "textbox's Error Icon Color",
		description:
			"This color is used for textbox's icon color when we input new data in textbox after error",
		defaultValue: '<from-input-error-icon-hastext-color>',
		selector: '.textBoxDiv .errorIcon.hasText',
	},
];

export const styleDefaults = new Map<string, string>(
	styleProperties
		.filter(e => !!e.defaultValue)
		.map(({ name, defaultValue }) => [name, defaultValue!]),
);
