@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Serif:wght@700&display=swap');

:root {
	--primary-color: #1f3c3d;
	--primary-yellow: #e5b122;
	--secondary-white-color: #f9f9fb;
	--primary-button-disabled: #e0e1e3;
	--secondary-disbaled-text: #6e6e6e;
	--secondary-disabled-border: #bcbcbc;
	--text-button-color-disabled: #888585;
	--pure-white: #ffffff;
	--black: #000000;
	--black-rgb: 0, 0, 0;
	--primary-yellow-rgb: 229, 177, 34;
	--toggle-hover-rgb: 142, 142, 142;
	--checkbox-grey: #dddddd;
	--toggle-button-slider-point: #969696;
	--secondary-grey: #e3e3e3;
}
* {
	font-family: 'Open Sans', sans-serif;
}
*,
*:before,
*:after {
	box-sizing: border-box;
}

h1 {
	font: normal normal bold 38px/58px Noto Serif;
	letter-spacing: 0px;
}

h2 {
	font: normal normal bold 28px/58px Noto Serif;
	letter-spacing: 0px;
}

.hide {
	opacity: 0;
}

.compButton .fabButton {
	width: 56px;
	height: 56px;
	border-radius: 28px;
	border: 0px;
	background-color: var(--primary-color);
	color: var(--pure-white);
	cursor: pointer;
}

.compButton .fabButtonMini {
	width: 40px;
	height: 40px;
	border-radius: 28px;
	border: 0px;
	background-color: var(--primary-color);
	color: var(--pure-white);
	cursor: pointer;
}

.compButton .button .buttonInternalContainer {
	display: flex;
	align-items: center;
}

.compButton .button .leftButtonIcon {
	margin-right: 8px;
}

.compButton .button .rightButtonIcon {
	margin-left: 8px;
}

.compButton .button {
	padding: 0 32px;
	height: 41px;
	border: none;
	border-radius: 5px;
	background: var(--primary-color);
	color: var(--secondary-white-color);
	opacity: 1;
	margin: 10px;
	cursor: pointer;
}

.compButton .button:disabled {
	background: var(--primary-button-disabled);
	color: var(--primary-color);
}

.compButton .button:hover {
	opacity: 69%;
}

.compButton .button.outlined {
	border: 1px solid var(--primary-color);
	background: transparent;
	color: var(--primary-color);
}

.compButton .button.outlined:disabled {
	color: var(--secondary-disbaled-text);
	border-color: var(--secondary-disabled-border);
}

.compButton .button.outlined:hover {
	background-color: rgba(31, 60, 61, 0.109);
	border-color: var(--primary-color);
	color: var(--secondary-disbaled-text);
}

.compButton .button.outlined:focus {
	background-color: rgba(31, 60, 61, 0.27);
	border-color: var(--primary-color);
	color: var(--secondary-disbaled-text);
}

.compButton .button.text {
	padding: 0 12px;
	border: 0;
	background: transparent;
	color: var(--primary-color);
}

.compButton .button.text:disabled {
	color: var(--text-button-color-disabled);
}

.compButton .button.text:hover {
	background-color: rgba(31, 60, 61, 0.078);
}

.compGrid.grid {
	margin: 10px;
}

.comp.compTextBox .supportText {
	font-size: 12px;
	letter-spacing: 0px;
	text-overflow: ellipsis;
}

.comp.compTextBox .supportText.disabled {
	color: #d5d5d5;
}

.comp.compTextBox .supportText.error {
	color: #ed6a5e;
}

.comp.compTextBox .textBoxDiv {
	width: 230px;
	height: 56px;
	border: 1px solid #ebeaee;
	border-radius: 4px;
}

.comp.compTextBox .textBoxDiv.error {
	border: 1px solid #ed6a5e;
}

.comp.compTextBox .textBoxDiv.focussed {
	border: 1px solid #397ef5;
}

.comp.compTextBox .textBoxDiv.hasText {
	border: 1px solid #393a3c;
}
.comp.compTextBox .textBoxDiv.textBoxDisabled {
	border: 1px solid #d5d5d5;
	color: #d5d5d5;
}
.comp.compTextBox .textBoxDiv .inputContainer {
	position: relative;
	height: 100%;
}

.comp.compTextBox .textBoxDiv .inputContainer .textbox {
	border: none;
	width: 100%;
	height: 100%;
	border-radius: 4px;
	outline: none;
}

.comp.compTextBox .textBoxDiv .inputContainer .textbox::placeholder {
	opacity: 0;
}

.comp.compTextBox .textBoxDiv .inputContainer .textBoxLabel {
	position: absolute;
	letter-spacing: 0px;
	color: #393a3c;
	left: 0px;
	top: 50%;
	transform: translateY(-50%);
	transition: top 100ms, transform 100ms ease-in;
	cursor: text;
	padding-left: 5px;
}

.comp.compTextBox .textBoxDiv .inputContainer .textBoxLabel.disabled {
	color: #d5d5d5;
}

.comp.compTextBox .textBoxDiv .inputContainer .textBoxLabel.error {
	color: #ed6a5e;
}

.comp.compTextBox .textBoxDiv.textBoxContainer {
	display: grid;
	grid-template-columns: auto 30px;
	align-items: center;
}

.comp.compTextBox .textBoxDiv.textBoxwithIconContainer {
	display: grid;
	grid-template-columns: 30px auto 30px;
	align-items: center;
}

.comp.compTextBox .textBoxDiv .inputContainer .textbox:focus + .textBoxLabel,
.comp.compTextBox
	.textBoxDiv
	.inputContainer
	.textbox:not(:placeholder-shown)
	+ .textBoxLabel {
	top: 0;
	left: 5px;
	transform: translateY(-55%);
	background-color: #fff;
	padding-left: 0;
}

.comp.compTextBox .textBoxDiv .inputContainer .textbox:disabled {
	background-color: transparent;
	color: #d5d5d5;
}

.comp.compTextBox
	.textBoxDiv.textBoxwithIconContainer
	.inputContainer
	.textbox:focus
	+ .textBoxLabel,
.comp.compTextBox
	.textBoxDiv.textBoxwithIconContainer
	.inputContainer
	.textbox:not(:placeholder-shown)
	+ .textBoxLabel {
	top: 0;
	left: -25px;
	transform: translateY(-55%);
	background-color: #fff;
	padding-left: 0;
}

.comp.compTextBox .textBoxDiv .leftIcon {
	justify-self: center;
}

.comp.compTextBox .textBoxDiv .clearText {
	cursor: pointer;
}

.comp.compLinks .link {
	font-size: 16px;
	letter-spacing: 0px;
	color: #397ef5;
}
.comp.compLinks .secondLink {
	padding-left: 5px;
	color: black;
}

.compCheckBox .checkbox input[type='checkbox'] {
	/* Add if not using autoprefixer */
	-webkit-appearance: none;
	appearance: none;
	/* For iOS < 15 to remove gradient background */
	background-color: var(--pure-white);
	/* Not removed via appearance */
	margin: 0;
	font: inherit;
	color: rgba(var(--black-rgb), 0.38);
	width: 1.15em;
	height: 1.15em;
	border: 0.15em solid rgba(var(--black-rgb), 0.38);
	border-radius: 0.15em;
	display: grid;
	place-content: center;
	cursor: pointer;
}

.compCheckBox .checkbox input[type='checkbox']:disabled {
	border: 0.15em solid var(--checkbox-grey);
}

.compCheckBox .checkbox input[type='checkbox']::before {
	content: '';
	width: 0.65em;
	height: 0.65em;
	transform: scale(0);
	transition: 500ms transform ease-in-out;
	box-shadow: inset 1em 1em var(--pure-white);
	transform-origin: bottom left;
	clip-path: polygon(13% 58%, 4% 68%, 35% 94%, 100% 15%, 90% 5%, 34% 77%);
	/* Windows High Contrast Mode */
	background-color: CanvasText;
}

.compCheckBox .checkbox.partial input[type='checkbox']::before {
	content: '';
	width: 0.65em;
	height: 0.65em;
	transform: scale(0);
	transition: 500ms transform ease-in-out;
	box-shadow: inset 1em 1em var(--primary-yellow);
	transform-origin: bottom left;
	clip-path: polygon(21% 46%, 21% 54%, 79% 54%, 79% 46%);
	background-color: CanvasText;
}

.compCheckBox .checkbox input[type='checkbox']:checked {
	background-color: var(--primary-yellow);
	border: 0px;
}

.compCheckBox .checkbox input[type='checkbox']:checked:hover {
	box-shadow: 0 0 0 5px rgba(var(--primary-yellow-rgb), 0.13),
		0 0 0 10px rgba(var(--primary-yellow-rgb), 0.13);
}

.compCheckBox .checkbox input[type='checkbox']:checked:active {
	box-shadow: 0 0 0 5px rgba(var(--primary-yellow-rgb), 0.13),
		0 0 0 10px rgba(var(--primary-yellow-rgb), 0.13);
}

.compCheckBox .checkbox input[type='checkbox']:checked:focus {
	box-shadow: 0 0 0 5px rgba(var(--primary-yellow-rgb), 0.13),
		0 0 0 10px rgba(var(--primary-yellow-rgb), 0.13);
}

.compCheckBox .checkbox input[type='checkbox']:hover {
	box-shadow: 0 0 0 5px rgba(var(--black-rgb), 0.12),
		0 0 0 10px rgba(var(--black-rgb), 0.12);
}

.compCheckBox .checkbox input[type='checkbox']:active {
	box-shadow: 0 0 0 5px rgba(var(--black-rgb), 0.12),
		0 0 0 10px rgba(var(--black-rgb), 0.12);
}

.compCheckBox .checkbox input[type='checkbox']:focus {
	box-shadow: 0 0 0 5px rgba(var(--black-rgb), 0.12),
		0 0 0 10px rgba(var(--black-rgb), 0.12);
}

.compCheckBox .checkbox input[type='checkbox']:checked::before {
	transform: scale(1);
}

.compCheckBox .checkbox {
	font-family: 'Open Sans', sans-serif;
	font-size: 1.1rem;
	line-height: 1.1;
	grid-template-rows: 1em auto;
	gap: 0.5em;
	width: 53px;
	justify-items: center;
	color: rgba(var(--black-rgb), 0.6);
	text-align: center;
	display: inline-grid;
}

.compRadioButton .radiobutton {
	font-family: 'Open Sans', sans-serif;
	font-size: 1.1rem;
	line-height: 1.1;
	display: inline-grid;
	grid-template-rows: 1em auto;
	gap: 0.5em;
	color: rgba(var(--black-rgb), 0.6);
}

.compRadioButton .radiobutton input[type='radio'] {
	-webkit-appearance: none;
	appearance: none;
	background-color: var(--pure-white);
	margin: 0;
	font: inherit;
	display: grid;
	place-content: center;
	width: 1.15em;
	height: 1.15em;
	border: 0.15em solid rgba(var(--black-rgb), 0.38);
	border-radius: 50%;
	transform: translateX(0.75em);
}

.compRadioButton .radiobutton input[type='radio']::before {
	content: '';
	width: 0.65em;
	height: 0.65em;
	border-radius: 50%;
	transform: scale(0);
	transition: 120ms transform ease-in-out;
	box-shadow: inset 1em 1em var(--primary-yellow);
	background-color: CanvasText;
}

.compRadioButton .radiobutton input[type='radio']:checked::before {
	transform: scale(1);
}

.compRadioButton .radiobutton input[type='radio']:checked {
	border: 0.15em solid var(--primary-yellow);
}

.compRadioButton .radiobutton input[type='radio']:checked:focus {
	box-shadow: 0 0 0 5px rgba(var(--primary-yellow-rgb), 0.13),
		0 0 0 10px rgba(var(--primary-yellow-rgb), 0.13);
}

.compRadioButton .radiobutton input[type='radio']:checked:active {
	box-shadow: 0 0 0 5px rgba(var(--primary-yellow-rgb), 0.13),
		0 0 0 10px rgba(var(--primary-yellow-rgb), 0.13);
}

.compRadioButton .radiobutton input[type='radio']:checked:hover {
	box-shadow: 0 0 0 5px rgba(var(--primary-yellow-rgb), 0.13),
		0 0 0 10px rgba(var(--primary-yellow-rgb), 0.13);
}

.compRadioButton .radiobutton input[type='radio']:active {
	box-shadow: 0 0 0 5px rgba(var(--black-rgb), 0.12),
		0 0 0 10px rgba(var(--black-rgb), 0.12);
}

.compRadioButton .radiobutton input[type='radio']:hover {
	box-shadow: 0 0 0 5px rgba(var(--black-rgb), 0.12),
		0 0 0 10px rgba(var(--black-rgb), 0.12);
}

.compRadioButton .radiobutton input[type='radio']:focus {
	box-shadow: 0 0 0 5px rgba(var(--black-rgb), 0.12),
		0 0 0 10px rgba(var(--black-rgb), 0.12);
}

.compToggleButton .toggleButton input[type='checkbox'] {
	-webkit-appearance: none;
	appearance: none;
	background-color: var(--secondary-grey);
	margin: 0;
	font: inherit;
	color: rgba(var(--black-rgb), 0.38);
	width: 3em;
	height: 1.5em;
	border: 0.15em solid rgba(var(--black-rgb), 0.38);
	border-radius: 1em;
	display: grid;
	align-items: center;
	cursor: pointer;
}

.compToggleButton .toggleButton input[type='checkbox']::before {
	content: '';
	width: 1em;
	height: 1em;
	border-radius: 50%;
	transition: 120ms transform ease-in-out;
	transform-origin: left;
	margin-left: 0.2em;
	background-color: rgba(var(--black-rgb), 0.75);
}

.compToggleButton .toggleButton input[type='checkbox']:checked::before {
	transform: translateX(1.5em);
	background-color: var(--pure-white);
}

.compToggleButton .toggleButton input[type='checkbox']:checked {
	background-color: var(--primary-yellow);
	border: none;
}

.compToggleButton .toggleButton input[type='checkbox']:hover::before {
	box-shadow: 0 0 0 0.3em rgba(var(--toggle-hover-rgb), 0.75);
}

.compToggleButton .toggleButton {
	font-family: 'Open Sans', sans-serif;
	font-size: 1.1rem;
	line-height: 1.1;
	display: inline-grid;
	grid-template-rows: 1em auto;
	gap: 0.5em;
	color: rgba(var(--black-rgb), 0.6);
	justify-items: center;
}
